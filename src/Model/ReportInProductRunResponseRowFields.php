<?php
/**
 * ReportInProductRunResponseRowFields
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature PHP Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Model;

use \ArrayAccess;
use DocuSign\eSign\ObjectSerializer;

/**
 * ReportInProductRunResponseRowFields Class Doc Comment
 *
 * @category    Class
 * @package     DocuSign\eSign
 * @author      Swagger Codegen team <apihelp@docusign.com>
 * @license     The DocuSign eSignature PHP Client SDK is licensed under the MIT License.
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ReportInProductRunResponseRowFields implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'reportInProductRunResponseRowFields';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'access_code_required' => '?string',
        'access_codes_attempted' => '?string',
        'access_codes_failed' => '?string',
        'account_id' => '?string',
        'authentication_category' => '?string',
        'authentication_success' => '?string',
        'authentication_type' => '?string',
        'average_time_to_complete_seconds' => '?string',
        'avg_complete_seconds' => '?string',
        'capture_method' => '?string',
        'completed' => '?string',
        'completed_ts' => '?string',
        'created_date' => '?string',
        'created_on' => '?string',
        'creator' => '?string',
        'custom_field' => '?string',
        'declined_date' => '?string',
        'declined_reason' => '?string',
        'delivered_date' => '?string',
        'envelope_count' => '?string',
        'envelope_creator' => '?string',
        'envelope_id' => '?string',
        'envelope_initial_send_ts' => '?string',
        'envelopes_billed' => '?string',
        'envelopes_completed' => '?string',
        'envelopes_completed_count' => '?string',
        'envelopes_declined' => '?string',
        'envelopes_sent' => '?string',
        'envelopes_sent_count' => '?string',
        'envelopes_voided' => '?string',
        'envelope_voided_reason' => '?string',
        'eod_document_description' => '?string',
        'eod_document_name' => '?string',
        'eod_document_profile_id' => '?string',
        'eod_transaction_id' => '?string',
        'eod_transaction_name' => '?string',
        'event_date' => '?string',
        'expiration_date' => '?string',
        'expired_ts' => '?string',
        'failure_reason' => '?string',
        'failures' => '?string',
        'failure_vendor_code' => '?string',
        'failure_vendor_reason' => '?string',
        'first_send_ts' => '?string',
        'group_id' => '?string',
        'group_name' => '?string',
        'hours_to_complete_end' => '?string',
        'hours_to_complete_start' => '?string',
        'id_checks_attempted' => '?string',
        'id_checks_failed' => '?string',
        'id_country' => '?string',
        'id_method' => '?string',
        'initial_send_ts' => '?string',
        'ip_address' => '?string',
        'last_activity' => '?string',
        'last_activity_date' => '?string',
        'last_modified' => '?string',
        'last_sent_date' => '?string',
        'last_used' => '?string',
        'metadata_removed' => '?string',
        'not_signed' => '?string',
        'number_of_authenticated_recipients' => '?string',
        'number_of_completed_signatures' => '?string',
        'number_of_documents' => '?string',
        'number_of_pages' => '?string',
        'number_of_recipients' => '?string',
        'number_of_sends' => '?string',
        'number_of_signers' => '?string',
        'number_of_total_documents' => '?string',
        'number_of_total_pages' => '?string',
        'number_of_total_signers' => '?string',
        'number_of_unique_senders' => '?string',
        'number_total_recipients' => '?string',
        'other_recipients_list' => '?string',
        'owner' => '?string',
        'owner_mail' => '?string',
        'period_end' => '?string',
        'period_start' => '?string',
        'phone_calls_attempted' => '?string',
        'phone_calls_failed' => '?string',
        'pii_redacted' => '?string',
        'purge_date' => '?string',
        'reason_for_declining' => '?string',
        'reason_for_voiding' => '?string',
        'reassign_reason' => '?string',
        'received' => '?string',
        'recipient' => '?string',
        'recipient_action' => '?string',
        'recipient_company_name' => '?string',
        'recipient_country' => '?string',
        'recipient_email' => '?string',
        'recipient_id' => '?string',
        'recipient_name' => '?string',
        'recipient_role_name' => '?string',
        'recipient_template_role_name' => '?string',
        'recipient_title' => '?string',
        'recipient_type' => '?string',
        'recipient_user_id' => '?string',
        'remaining_signatures' => '?string',
        'routing_order' => '?string',
        'sender_account_id' => '?string',
        'sender_company_name' => '?string',
        'sender_country' => '?string',
        'sender_email' => '?string',
        'sender_ip_address' => '?string',
        'sender_job_title' => '?string',
        'sender_name' => '?string',
        'sender_user_id' => '?string',
        'signature_type' => '?string',
        'signature_type_value' => '?string',
        'sign_date' => '?string',
        'signed' => '?string',
        'signed_date' => '?string',
        'signed_on_mobile' => '?string',
        'signed_on_paper' => '?string',
        'signer_list' => '?string',
        'status' => '?string',
        'status_changed_date' => '?string',
        'status_changed_ts' => '?string',
        'status_comment' => '?string',
        'subject' => '?string',
        'successes' => '?string',
        'template_id' => '?string',
        'template_name' => '?string',
        'templates_created' => '?string',
        'templates_created_count' => '?string',
        'terminal_status_date' => '?string',
        'time_to_complete_seconds' => '?string',
        'time_to_deliver' => '?string',
        'total_documents' => '?string',
        'total_envelopes' => '?string',
        'total_pages' => '?string',
        'total_recipients' => '?string',
        'total_signers' => '?string',
        'unique_senders' => '?string',
        'user_account_email' => '?string',
        'user_account_name' => '?string',
        'user_account_status' => '?string',
        'user_count' => '?string',
        'user_id' => '?string',
        'verification_status' => '?string',
        'verification_type' => '?string',
        'view_date' => '?string',
        'voided_ts' => '?string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'access_code_required' => null,
        'access_codes_attempted' => null,
        'access_codes_failed' => null,
        'account_id' => null,
        'authentication_category' => null,
        'authentication_success' => null,
        'authentication_type' => null,
        'average_time_to_complete_seconds' => null,
        'avg_complete_seconds' => null,
        'capture_method' => null,
        'completed' => null,
        'completed_ts' => null,
        'created_date' => null,
        'created_on' => null,
        'creator' => null,
        'custom_field' => null,
        'declined_date' => null,
        'declined_reason' => null,
        'delivered_date' => null,
        'envelope_count' => null,
        'envelope_creator' => null,
        'envelope_id' => null,
        'envelope_initial_send_ts' => null,
        'envelopes_billed' => null,
        'envelopes_completed' => null,
        'envelopes_completed_count' => null,
        'envelopes_declined' => null,
        'envelopes_sent' => null,
        'envelopes_sent_count' => null,
        'envelopes_voided' => null,
        'envelope_voided_reason' => null,
        'eod_document_description' => null,
        'eod_document_name' => null,
        'eod_document_profile_id' => null,
        'eod_transaction_id' => null,
        'eod_transaction_name' => null,
        'event_date' => null,
        'expiration_date' => null,
        'expired_ts' => null,
        'failure_reason' => null,
        'failures' => null,
        'failure_vendor_code' => null,
        'failure_vendor_reason' => null,
        'first_send_ts' => null,
        'group_id' => null,
        'group_name' => null,
        'hours_to_complete_end' => null,
        'hours_to_complete_start' => null,
        'id_checks_attempted' => null,
        'id_checks_failed' => null,
        'id_country' => null,
        'id_method' => null,
        'initial_send_ts' => null,
        'ip_address' => null,
        'last_activity' => null,
        'last_activity_date' => null,
        'last_modified' => null,
        'last_sent_date' => null,
        'last_used' => null,
        'metadata_removed' => null,
        'not_signed' => null,
        'number_of_authenticated_recipients' => null,
        'number_of_completed_signatures' => null,
        'number_of_documents' => null,
        'number_of_pages' => null,
        'number_of_recipients' => null,
        'number_of_sends' => null,
        'number_of_signers' => null,
        'number_of_total_documents' => null,
        'number_of_total_pages' => null,
        'number_of_total_signers' => null,
        'number_of_unique_senders' => null,
        'number_total_recipients' => null,
        'other_recipients_list' => null,
        'owner' => null,
        'owner_mail' => null,
        'period_end' => null,
        'period_start' => null,
        'phone_calls_attempted' => null,
        'phone_calls_failed' => null,
        'pii_redacted' => null,
        'purge_date' => null,
        'reason_for_declining' => null,
        'reason_for_voiding' => null,
        'reassign_reason' => null,
        'received' => null,
        'recipient' => null,
        'recipient_action' => null,
        'recipient_company_name' => null,
        'recipient_country' => null,
        'recipient_email' => null,
        'recipient_id' => null,
        'recipient_name' => null,
        'recipient_role_name' => null,
        'recipient_template_role_name' => null,
        'recipient_title' => null,
        'recipient_type' => null,
        'recipient_user_id' => null,
        'remaining_signatures' => null,
        'routing_order' => null,
        'sender_account_id' => null,
        'sender_company_name' => null,
        'sender_country' => null,
        'sender_email' => null,
        'sender_ip_address' => null,
        'sender_job_title' => null,
        'sender_name' => null,
        'sender_user_id' => null,
        'signature_type' => null,
        'signature_type_value' => null,
        'sign_date' => null,
        'signed' => null,
        'signed_date' => null,
        'signed_on_mobile' => null,
        'signed_on_paper' => null,
        'signer_list' => null,
        'status' => null,
        'status_changed_date' => null,
        'status_changed_ts' => null,
        'status_comment' => null,
        'subject' => null,
        'successes' => null,
        'template_id' => null,
        'template_name' => null,
        'templates_created' => null,
        'templates_created_count' => null,
        'terminal_status_date' => null,
        'time_to_complete_seconds' => null,
        'time_to_deliver' => null,
        'total_documents' => null,
        'total_envelopes' => null,
        'total_pages' => null,
        'total_recipients' => null,
        'total_signers' => null,
        'unique_senders' => null,
        'user_account_email' => null,
        'user_account_name' => null,
        'user_account_status' => null,
        'user_count' => null,
        'user_id' => null,
        'verification_status' => null,
        'verification_type' => null,
        'view_date' => null,
        'voided_ts' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'access_code_required' => 'accessCodeRequired',
        'access_codes_attempted' => 'accessCodesAttempted',
        'access_codes_failed' => 'accessCodesFailed',
        'account_id' => 'accountId',
        'authentication_category' => 'authenticationCategory',
        'authentication_success' => 'authenticationSuccess',
        'authentication_type' => 'authenticationType',
        'average_time_to_complete_seconds' => 'averageTimeToCompleteSeconds',
        'avg_complete_seconds' => 'avgCompleteSeconds',
        'capture_method' => 'captureMethod',
        'completed' => 'completed',
        'completed_ts' => 'completedTs',
        'created_date' => 'createdDate',
        'created_on' => 'createdOn',
        'creator' => 'creator',
        'custom_field' => 'customField',
        'declined_date' => 'declinedDate',
        'declined_reason' => 'declinedReason',
        'delivered_date' => 'deliveredDate',
        'envelope_count' => 'envelopeCount',
        'envelope_creator' => 'envelopeCreator',
        'envelope_id' => 'envelopeId',
        'envelope_initial_send_ts' => 'envelopeInitialSendTs',
        'envelopes_billed' => 'envelopesBilled',
        'envelopes_completed' => 'envelopesCompleted',
        'envelopes_completed_count' => 'envelopesCompletedCount',
        'envelopes_declined' => 'envelopesDeclined',
        'envelopes_sent' => 'envelopesSent',
        'envelopes_sent_count' => 'envelopesSentCount',
        'envelopes_voided' => 'envelopesVoided',
        'envelope_voided_reason' => 'envelopeVoidedReason',
        'eod_document_description' => 'eodDocumentDescription',
        'eod_document_name' => 'eodDocumentName',
        'eod_document_profile_id' => 'eodDocumentProfileId',
        'eod_transaction_id' => 'eodTransactionId',
        'eod_transaction_name' => 'eodTransactionName',
        'event_date' => 'eventDate',
        'expiration_date' => 'expirationDate',
        'expired_ts' => 'expiredTs',
        'failure_reason' => 'failureReason',
        'failures' => 'failures',
        'failure_vendor_code' => 'failureVendorCode',
        'failure_vendor_reason' => 'failureVendorReason',
        'first_send_ts' => 'firstSendTs',
        'group_id' => 'groupId',
        'group_name' => 'groupName',
        'hours_to_complete_end' => 'hoursToCompleteEnd',
        'hours_to_complete_start' => 'hoursToCompleteStart',
        'id_checks_attempted' => 'idChecksAttempted',
        'id_checks_failed' => 'idChecksFailed',
        'id_country' => 'idCountry',
        'id_method' => 'idMethod',
        'initial_send_ts' => 'initialSendTs',
        'ip_address' => 'ipAddress',
        'last_activity' => 'lastActivity',
        'last_activity_date' => 'lastActivityDate',
        'last_modified' => 'lastModified',
        'last_sent_date' => 'lastSentDate',
        'last_used' => 'lastUsed',
        'metadata_removed' => 'metadataRemoved',
        'not_signed' => 'notSigned',
        'number_of_authenticated_recipients' => 'numberOfAuthenticatedRecipients',
        'number_of_completed_signatures' => 'numberOfCompletedSignatures',
        'number_of_documents' => 'numberOfDocuments',
        'number_of_pages' => 'numberOfPages',
        'number_of_recipients' => 'numberOfRecipients',
        'number_of_sends' => 'numberOfSends',
        'number_of_signers' => 'numberOfSigners',
        'number_of_total_documents' => 'numberOfTotalDocuments',
        'number_of_total_pages' => 'numberOfTotalPages',
        'number_of_total_signers' => 'numberOfTotalSigners',
        'number_of_unique_senders' => 'numberOfUniqueSenders',
        'number_total_recipients' => 'numberTotalRecipients',
        'other_recipients_list' => 'otherRecipientsList',
        'owner' => 'owner',
        'owner_mail' => 'ownerMail',
        'period_end' => 'periodEnd',
        'period_start' => 'periodStart',
        'phone_calls_attempted' => 'phoneCallsAttempted',
        'phone_calls_failed' => 'phoneCallsFailed',
        'pii_redacted' => 'piiRedacted',
        'purge_date' => 'purgeDate',
        'reason_for_declining' => 'reasonForDeclining',
        'reason_for_voiding' => 'reasonForVoiding',
        'reassign_reason' => 'reassignReason',
        'received' => 'received',
        'recipient' => 'recipient',
        'recipient_action' => 'recipientAction',
        'recipient_company_name' => 'recipientCompanyName',
        'recipient_country' => 'recipientCountry',
        'recipient_email' => 'recipientEmail',
        'recipient_id' => 'recipientId',
        'recipient_name' => 'recipientName',
        'recipient_role_name' => 'recipientRoleName',
        'recipient_template_role_name' => 'recipientTemplateRoleName',
        'recipient_title' => 'recipientTitle',
        'recipient_type' => 'recipientType',
        'recipient_user_id' => 'recipientUserId',
        'remaining_signatures' => 'remainingSignatures',
        'routing_order' => 'routingOrder',
        'sender_account_id' => 'senderAccountId',
        'sender_company_name' => 'senderCompanyName',
        'sender_country' => 'senderCountry',
        'sender_email' => 'senderEmail',
        'sender_ip_address' => 'senderIPAddress',
        'sender_job_title' => 'senderJobTitle',
        'sender_name' => 'senderName',
        'sender_user_id' => 'senderUserId',
        'signature_type' => 'signatureType',
        'signature_type_value' => 'signatureTypeValue',
        'sign_date' => 'signDate',
        'signed' => 'signed',
        'signed_date' => 'signedDate',
        'signed_on_mobile' => 'signedOnMobile',
        'signed_on_paper' => 'signedOnPaper',
        'signer_list' => 'signerList',
        'status' => 'status',
        'status_changed_date' => 'statusChangedDate',
        'status_changed_ts' => 'statusChangedTs',
        'status_comment' => 'statusComment',
        'subject' => 'subject',
        'successes' => 'successes',
        'template_id' => 'templateId',
        'template_name' => 'templateName',
        'templates_created' => 'templatesCreated',
        'templates_created_count' => 'templatesCreatedCount',
        'terminal_status_date' => 'terminalStatusDate',
        'time_to_complete_seconds' => 'timeToCompleteSeconds',
        'time_to_deliver' => 'timeToDeliver',
        'total_documents' => 'totalDocuments',
        'total_envelopes' => 'totalEnvelopes',
        'total_pages' => 'totalPages',
        'total_recipients' => 'totalRecipients',
        'total_signers' => 'totalSigners',
        'unique_senders' => 'uniqueSenders',
        'user_account_email' => 'userAccountEmail',
        'user_account_name' => 'userAccountName',
        'user_account_status' => 'userAccountStatus',
        'user_count' => 'userCount',
        'user_id' => 'userId',
        'verification_status' => 'verificationStatus',
        'verification_type' => 'verificationType',
        'view_date' => 'viewDate',
        'voided_ts' => 'voidedTs'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'access_code_required' => 'setAccessCodeRequired',
        'access_codes_attempted' => 'setAccessCodesAttempted',
        'access_codes_failed' => 'setAccessCodesFailed',
        'account_id' => 'setAccountId',
        'authentication_category' => 'setAuthenticationCategory',
        'authentication_success' => 'setAuthenticationSuccess',
        'authentication_type' => 'setAuthenticationType',
        'average_time_to_complete_seconds' => 'setAverageTimeToCompleteSeconds',
        'avg_complete_seconds' => 'setAvgCompleteSeconds',
        'capture_method' => 'setCaptureMethod',
        'completed' => 'setCompleted',
        'completed_ts' => 'setCompletedTs',
        'created_date' => 'setCreatedDate',
        'created_on' => 'setCreatedOn',
        'creator' => 'setCreator',
        'custom_field' => 'setCustomField',
        'declined_date' => 'setDeclinedDate',
        'declined_reason' => 'setDeclinedReason',
        'delivered_date' => 'setDeliveredDate',
        'envelope_count' => 'setEnvelopeCount',
        'envelope_creator' => 'setEnvelopeCreator',
        'envelope_id' => 'setEnvelopeId',
        'envelope_initial_send_ts' => 'setEnvelopeInitialSendTs',
        'envelopes_billed' => 'setEnvelopesBilled',
        'envelopes_completed' => 'setEnvelopesCompleted',
        'envelopes_completed_count' => 'setEnvelopesCompletedCount',
        'envelopes_declined' => 'setEnvelopesDeclined',
        'envelopes_sent' => 'setEnvelopesSent',
        'envelopes_sent_count' => 'setEnvelopesSentCount',
        'envelopes_voided' => 'setEnvelopesVoided',
        'envelope_voided_reason' => 'setEnvelopeVoidedReason',
        'eod_document_description' => 'setEodDocumentDescription',
        'eod_document_name' => 'setEodDocumentName',
        'eod_document_profile_id' => 'setEodDocumentProfileId',
        'eod_transaction_id' => 'setEodTransactionId',
        'eod_transaction_name' => 'setEodTransactionName',
        'event_date' => 'setEventDate',
        'expiration_date' => 'setExpirationDate',
        'expired_ts' => 'setExpiredTs',
        'failure_reason' => 'setFailureReason',
        'failures' => 'setFailures',
        'failure_vendor_code' => 'setFailureVendorCode',
        'failure_vendor_reason' => 'setFailureVendorReason',
        'first_send_ts' => 'setFirstSendTs',
        'group_id' => 'setGroupId',
        'group_name' => 'setGroupName',
        'hours_to_complete_end' => 'setHoursToCompleteEnd',
        'hours_to_complete_start' => 'setHoursToCompleteStart',
        'id_checks_attempted' => 'setIdChecksAttempted',
        'id_checks_failed' => 'setIdChecksFailed',
        'id_country' => 'setIdCountry',
        'id_method' => 'setIdMethod',
        'initial_send_ts' => 'setInitialSendTs',
        'ip_address' => 'setIpAddress',
        'last_activity' => 'setLastActivity',
        'last_activity_date' => 'setLastActivityDate',
        'last_modified' => 'setLastModified',
        'last_sent_date' => 'setLastSentDate',
        'last_used' => 'setLastUsed',
        'metadata_removed' => 'setMetadataRemoved',
        'not_signed' => 'setNotSigned',
        'number_of_authenticated_recipients' => 'setNumberOfAuthenticatedRecipients',
        'number_of_completed_signatures' => 'setNumberOfCompletedSignatures',
        'number_of_documents' => 'setNumberOfDocuments',
        'number_of_pages' => 'setNumberOfPages',
        'number_of_recipients' => 'setNumberOfRecipients',
        'number_of_sends' => 'setNumberOfSends',
        'number_of_signers' => 'setNumberOfSigners',
        'number_of_total_documents' => 'setNumberOfTotalDocuments',
        'number_of_total_pages' => 'setNumberOfTotalPages',
        'number_of_total_signers' => 'setNumberOfTotalSigners',
        'number_of_unique_senders' => 'setNumberOfUniqueSenders',
        'number_total_recipients' => 'setNumberTotalRecipients',
        'other_recipients_list' => 'setOtherRecipientsList',
        'owner' => 'setOwner',
        'owner_mail' => 'setOwnerMail',
        'period_end' => 'setPeriodEnd',
        'period_start' => 'setPeriodStart',
        'phone_calls_attempted' => 'setPhoneCallsAttempted',
        'phone_calls_failed' => 'setPhoneCallsFailed',
        'pii_redacted' => 'setPiiRedacted',
        'purge_date' => 'setPurgeDate',
        'reason_for_declining' => 'setReasonForDeclining',
        'reason_for_voiding' => 'setReasonForVoiding',
        'reassign_reason' => 'setReassignReason',
        'received' => 'setReceived',
        'recipient' => 'setRecipient',
        'recipient_action' => 'setRecipientAction',
        'recipient_company_name' => 'setRecipientCompanyName',
        'recipient_country' => 'setRecipientCountry',
        'recipient_email' => 'setRecipientEmail',
        'recipient_id' => 'setRecipientId',
        'recipient_name' => 'setRecipientName',
        'recipient_role_name' => 'setRecipientRoleName',
        'recipient_template_role_name' => 'setRecipientTemplateRoleName',
        'recipient_title' => 'setRecipientTitle',
        'recipient_type' => 'setRecipientType',
        'recipient_user_id' => 'setRecipientUserId',
        'remaining_signatures' => 'setRemainingSignatures',
        'routing_order' => 'setRoutingOrder',
        'sender_account_id' => 'setSenderAccountId',
        'sender_company_name' => 'setSenderCompanyName',
        'sender_country' => 'setSenderCountry',
        'sender_email' => 'setSenderEmail',
        'sender_ip_address' => 'setSenderIpAddress',
        'sender_job_title' => 'setSenderJobTitle',
        'sender_name' => 'setSenderName',
        'sender_user_id' => 'setSenderUserId',
        'signature_type' => 'setSignatureType',
        'signature_type_value' => 'setSignatureTypeValue',
        'sign_date' => 'setSignDate',
        'signed' => 'setSigned',
        'signed_date' => 'setSignedDate',
        'signed_on_mobile' => 'setSignedOnMobile',
        'signed_on_paper' => 'setSignedOnPaper',
        'signer_list' => 'setSignerList',
        'status' => 'setStatus',
        'status_changed_date' => 'setStatusChangedDate',
        'status_changed_ts' => 'setStatusChangedTs',
        'status_comment' => 'setStatusComment',
        'subject' => 'setSubject',
        'successes' => 'setSuccesses',
        'template_id' => 'setTemplateId',
        'template_name' => 'setTemplateName',
        'templates_created' => 'setTemplatesCreated',
        'templates_created_count' => 'setTemplatesCreatedCount',
        'terminal_status_date' => 'setTerminalStatusDate',
        'time_to_complete_seconds' => 'setTimeToCompleteSeconds',
        'time_to_deliver' => 'setTimeToDeliver',
        'total_documents' => 'setTotalDocuments',
        'total_envelopes' => 'setTotalEnvelopes',
        'total_pages' => 'setTotalPages',
        'total_recipients' => 'setTotalRecipients',
        'total_signers' => 'setTotalSigners',
        'unique_senders' => 'setUniqueSenders',
        'user_account_email' => 'setUserAccountEmail',
        'user_account_name' => 'setUserAccountName',
        'user_account_status' => 'setUserAccountStatus',
        'user_count' => 'setUserCount',
        'user_id' => 'setUserId',
        'verification_status' => 'setVerificationStatus',
        'verification_type' => 'setVerificationType',
        'view_date' => 'setViewDate',
        'voided_ts' => 'setVoidedTs'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'access_code_required' => 'getAccessCodeRequired',
        'access_codes_attempted' => 'getAccessCodesAttempted',
        'access_codes_failed' => 'getAccessCodesFailed',
        'account_id' => 'getAccountId',
        'authentication_category' => 'getAuthenticationCategory',
        'authentication_success' => 'getAuthenticationSuccess',
        'authentication_type' => 'getAuthenticationType',
        'average_time_to_complete_seconds' => 'getAverageTimeToCompleteSeconds',
        'avg_complete_seconds' => 'getAvgCompleteSeconds',
        'capture_method' => 'getCaptureMethod',
        'completed' => 'getCompleted',
        'completed_ts' => 'getCompletedTs',
        'created_date' => 'getCreatedDate',
        'created_on' => 'getCreatedOn',
        'creator' => 'getCreator',
        'custom_field' => 'getCustomField',
        'declined_date' => 'getDeclinedDate',
        'declined_reason' => 'getDeclinedReason',
        'delivered_date' => 'getDeliveredDate',
        'envelope_count' => 'getEnvelopeCount',
        'envelope_creator' => 'getEnvelopeCreator',
        'envelope_id' => 'getEnvelopeId',
        'envelope_initial_send_ts' => 'getEnvelopeInitialSendTs',
        'envelopes_billed' => 'getEnvelopesBilled',
        'envelopes_completed' => 'getEnvelopesCompleted',
        'envelopes_completed_count' => 'getEnvelopesCompletedCount',
        'envelopes_declined' => 'getEnvelopesDeclined',
        'envelopes_sent' => 'getEnvelopesSent',
        'envelopes_sent_count' => 'getEnvelopesSentCount',
        'envelopes_voided' => 'getEnvelopesVoided',
        'envelope_voided_reason' => 'getEnvelopeVoidedReason',
        'eod_document_description' => 'getEodDocumentDescription',
        'eod_document_name' => 'getEodDocumentName',
        'eod_document_profile_id' => 'getEodDocumentProfileId',
        'eod_transaction_id' => 'getEodTransactionId',
        'eod_transaction_name' => 'getEodTransactionName',
        'event_date' => 'getEventDate',
        'expiration_date' => 'getExpirationDate',
        'expired_ts' => 'getExpiredTs',
        'failure_reason' => 'getFailureReason',
        'failures' => 'getFailures',
        'failure_vendor_code' => 'getFailureVendorCode',
        'failure_vendor_reason' => 'getFailureVendorReason',
        'first_send_ts' => 'getFirstSendTs',
        'group_id' => 'getGroupId',
        'group_name' => 'getGroupName',
        'hours_to_complete_end' => 'getHoursToCompleteEnd',
        'hours_to_complete_start' => 'getHoursToCompleteStart',
        'id_checks_attempted' => 'getIdChecksAttempted',
        'id_checks_failed' => 'getIdChecksFailed',
        'id_country' => 'getIdCountry',
        'id_method' => 'getIdMethod',
        'initial_send_ts' => 'getInitialSendTs',
        'ip_address' => 'getIpAddress',
        'last_activity' => 'getLastActivity',
        'last_activity_date' => 'getLastActivityDate',
        'last_modified' => 'getLastModified',
        'last_sent_date' => 'getLastSentDate',
        'last_used' => 'getLastUsed',
        'metadata_removed' => 'getMetadataRemoved',
        'not_signed' => 'getNotSigned',
        'number_of_authenticated_recipients' => 'getNumberOfAuthenticatedRecipients',
        'number_of_completed_signatures' => 'getNumberOfCompletedSignatures',
        'number_of_documents' => 'getNumberOfDocuments',
        'number_of_pages' => 'getNumberOfPages',
        'number_of_recipients' => 'getNumberOfRecipients',
        'number_of_sends' => 'getNumberOfSends',
        'number_of_signers' => 'getNumberOfSigners',
        'number_of_total_documents' => 'getNumberOfTotalDocuments',
        'number_of_total_pages' => 'getNumberOfTotalPages',
        'number_of_total_signers' => 'getNumberOfTotalSigners',
        'number_of_unique_senders' => 'getNumberOfUniqueSenders',
        'number_total_recipients' => 'getNumberTotalRecipients',
        'other_recipients_list' => 'getOtherRecipientsList',
        'owner' => 'getOwner',
        'owner_mail' => 'getOwnerMail',
        'period_end' => 'getPeriodEnd',
        'period_start' => 'getPeriodStart',
        'phone_calls_attempted' => 'getPhoneCallsAttempted',
        'phone_calls_failed' => 'getPhoneCallsFailed',
        'pii_redacted' => 'getPiiRedacted',
        'purge_date' => 'getPurgeDate',
        'reason_for_declining' => 'getReasonForDeclining',
        'reason_for_voiding' => 'getReasonForVoiding',
        'reassign_reason' => 'getReassignReason',
        'received' => 'getReceived',
        'recipient' => 'getRecipient',
        'recipient_action' => 'getRecipientAction',
        'recipient_company_name' => 'getRecipientCompanyName',
        'recipient_country' => 'getRecipientCountry',
        'recipient_email' => 'getRecipientEmail',
        'recipient_id' => 'getRecipientId',
        'recipient_name' => 'getRecipientName',
        'recipient_role_name' => 'getRecipientRoleName',
        'recipient_template_role_name' => 'getRecipientTemplateRoleName',
        'recipient_title' => 'getRecipientTitle',
        'recipient_type' => 'getRecipientType',
        'recipient_user_id' => 'getRecipientUserId',
        'remaining_signatures' => 'getRemainingSignatures',
        'routing_order' => 'getRoutingOrder',
        'sender_account_id' => 'getSenderAccountId',
        'sender_company_name' => 'getSenderCompanyName',
        'sender_country' => 'getSenderCountry',
        'sender_email' => 'getSenderEmail',
        'sender_ip_address' => 'getSenderIpAddress',
        'sender_job_title' => 'getSenderJobTitle',
        'sender_name' => 'getSenderName',
        'sender_user_id' => 'getSenderUserId',
        'signature_type' => 'getSignatureType',
        'signature_type_value' => 'getSignatureTypeValue',
        'sign_date' => 'getSignDate',
        'signed' => 'getSigned',
        'signed_date' => 'getSignedDate',
        'signed_on_mobile' => 'getSignedOnMobile',
        'signed_on_paper' => 'getSignedOnPaper',
        'signer_list' => 'getSignerList',
        'status' => 'getStatus',
        'status_changed_date' => 'getStatusChangedDate',
        'status_changed_ts' => 'getStatusChangedTs',
        'status_comment' => 'getStatusComment',
        'subject' => 'getSubject',
        'successes' => 'getSuccesses',
        'template_id' => 'getTemplateId',
        'template_name' => 'getTemplateName',
        'templates_created' => 'getTemplatesCreated',
        'templates_created_count' => 'getTemplatesCreatedCount',
        'terminal_status_date' => 'getTerminalStatusDate',
        'time_to_complete_seconds' => 'getTimeToCompleteSeconds',
        'time_to_deliver' => 'getTimeToDeliver',
        'total_documents' => 'getTotalDocuments',
        'total_envelopes' => 'getTotalEnvelopes',
        'total_pages' => 'getTotalPages',
        'total_recipients' => 'getTotalRecipients',
        'total_signers' => 'getTotalSigners',
        'unique_senders' => 'getUniqueSenders',
        'user_account_email' => 'getUserAccountEmail',
        'user_account_name' => 'getUserAccountName',
        'user_account_status' => 'getUserAccountStatus',
        'user_count' => 'getUserCount',
        'user_id' => 'getUserId',
        'verification_status' => 'getVerificationStatus',
        'verification_type' => 'getVerificationType',
        'view_date' => 'getViewDate',
        'voided_ts' => 'getVoidedTs'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }





    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->container['access_code_required'] = isset($data['access_code_required']) ? $data['access_code_required'] : null;
        $this->container['access_codes_attempted'] = isset($data['access_codes_attempted']) ? $data['access_codes_attempted'] : null;
        $this->container['access_codes_failed'] = isset($data['access_codes_failed']) ? $data['access_codes_failed'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['authentication_category'] = isset($data['authentication_category']) ? $data['authentication_category'] : null;
        $this->container['authentication_success'] = isset($data['authentication_success']) ? $data['authentication_success'] : null;
        $this->container['authentication_type'] = isset($data['authentication_type']) ? $data['authentication_type'] : null;
        $this->container['average_time_to_complete_seconds'] = isset($data['average_time_to_complete_seconds']) ? $data['average_time_to_complete_seconds'] : null;
        $this->container['avg_complete_seconds'] = isset($data['avg_complete_seconds']) ? $data['avg_complete_seconds'] : null;
        $this->container['capture_method'] = isset($data['capture_method']) ? $data['capture_method'] : null;
        $this->container['completed'] = isset($data['completed']) ? $data['completed'] : null;
        $this->container['completed_ts'] = isset($data['completed_ts']) ? $data['completed_ts'] : null;
        $this->container['created_date'] = isset($data['created_date']) ? $data['created_date'] : null;
        $this->container['created_on'] = isset($data['created_on']) ? $data['created_on'] : null;
        $this->container['creator'] = isset($data['creator']) ? $data['creator'] : null;
        $this->container['custom_field'] = isset($data['custom_field']) ? $data['custom_field'] : null;
        $this->container['declined_date'] = isset($data['declined_date']) ? $data['declined_date'] : null;
        $this->container['declined_reason'] = isset($data['declined_reason']) ? $data['declined_reason'] : null;
        $this->container['delivered_date'] = isset($data['delivered_date']) ? $data['delivered_date'] : null;
        $this->container['envelope_count'] = isset($data['envelope_count']) ? $data['envelope_count'] : null;
        $this->container['envelope_creator'] = isset($data['envelope_creator']) ? $data['envelope_creator'] : null;
        $this->container['envelope_id'] = isset($data['envelope_id']) ? $data['envelope_id'] : null;
        $this->container['envelope_initial_send_ts'] = isset($data['envelope_initial_send_ts']) ? $data['envelope_initial_send_ts'] : null;
        $this->container['envelopes_billed'] = isset($data['envelopes_billed']) ? $data['envelopes_billed'] : null;
        $this->container['envelopes_completed'] = isset($data['envelopes_completed']) ? $data['envelopes_completed'] : null;
        $this->container['envelopes_completed_count'] = isset($data['envelopes_completed_count']) ? $data['envelopes_completed_count'] : null;
        $this->container['envelopes_declined'] = isset($data['envelopes_declined']) ? $data['envelopes_declined'] : null;
        $this->container['envelopes_sent'] = isset($data['envelopes_sent']) ? $data['envelopes_sent'] : null;
        $this->container['envelopes_sent_count'] = isset($data['envelopes_sent_count']) ? $data['envelopes_sent_count'] : null;
        $this->container['envelopes_voided'] = isset($data['envelopes_voided']) ? $data['envelopes_voided'] : null;
        $this->container['envelope_voided_reason'] = isset($data['envelope_voided_reason']) ? $data['envelope_voided_reason'] : null;
        $this->container['eod_document_description'] = isset($data['eod_document_description']) ? $data['eod_document_description'] : null;
        $this->container['eod_document_name'] = isset($data['eod_document_name']) ? $data['eod_document_name'] : null;
        $this->container['eod_document_profile_id'] = isset($data['eod_document_profile_id']) ? $data['eod_document_profile_id'] : null;
        $this->container['eod_transaction_id'] = isset($data['eod_transaction_id']) ? $data['eod_transaction_id'] : null;
        $this->container['eod_transaction_name'] = isset($data['eod_transaction_name']) ? $data['eod_transaction_name'] : null;
        $this->container['event_date'] = isset($data['event_date']) ? $data['event_date'] : null;
        $this->container['expiration_date'] = isset($data['expiration_date']) ? $data['expiration_date'] : null;
        $this->container['expired_ts'] = isset($data['expired_ts']) ? $data['expired_ts'] : null;
        $this->container['failure_reason'] = isset($data['failure_reason']) ? $data['failure_reason'] : null;
        $this->container['failures'] = isset($data['failures']) ? $data['failures'] : null;
        $this->container['failure_vendor_code'] = isset($data['failure_vendor_code']) ? $data['failure_vendor_code'] : null;
        $this->container['failure_vendor_reason'] = isset($data['failure_vendor_reason']) ? $data['failure_vendor_reason'] : null;
        $this->container['first_send_ts'] = isset($data['first_send_ts']) ? $data['first_send_ts'] : null;
        $this->container['group_id'] = isset($data['group_id']) ? $data['group_id'] : null;
        $this->container['group_name'] = isset($data['group_name']) ? $data['group_name'] : null;
        $this->container['hours_to_complete_end'] = isset($data['hours_to_complete_end']) ? $data['hours_to_complete_end'] : null;
        $this->container['hours_to_complete_start'] = isset($data['hours_to_complete_start']) ? $data['hours_to_complete_start'] : null;
        $this->container['id_checks_attempted'] = isset($data['id_checks_attempted']) ? $data['id_checks_attempted'] : null;
        $this->container['id_checks_failed'] = isset($data['id_checks_failed']) ? $data['id_checks_failed'] : null;
        $this->container['id_country'] = isset($data['id_country']) ? $data['id_country'] : null;
        $this->container['id_method'] = isset($data['id_method']) ? $data['id_method'] : null;
        $this->container['initial_send_ts'] = isset($data['initial_send_ts']) ? $data['initial_send_ts'] : null;
        $this->container['ip_address'] = isset($data['ip_address']) ? $data['ip_address'] : null;
        $this->container['last_activity'] = isset($data['last_activity']) ? $data['last_activity'] : null;
        $this->container['last_activity_date'] = isset($data['last_activity_date']) ? $data['last_activity_date'] : null;
        $this->container['last_modified'] = isset($data['last_modified']) ? $data['last_modified'] : null;
        $this->container['last_sent_date'] = isset($data['last_sent_date']) ? $data['last_sent_date'] : null;
        $this->container['last_used'] = isset($data['last_used']) ? $data['last_used'] : null;
        $this->container['metadata_removed'] = isset($data['metadata_removed']) ? $data['metadata_removed'] : null;
        $this->container['not_signed'] = isset($data['not_signed']) ? $data['not_signed'] : null;
        $this->container['number_of_authenticated_recipients'] = isset($data['number_of_authenticated_recipients']) ? $data['number_of_authenticated_recipients'] : null;
        $this->container['number_of_completed_signatures'] = isset($data['number_of_completed_signatures']) ? $data['number_of_completed_signatures'] : null;
        $this->container['number_of_documents'] = isset($data['number_of_documents']) ? $data['number_of_documents'] : null;
        $this->container['number_of_pages'] = isset($data['number_of_pages']) ? $data['number_of_pages'] : null;
        $this->container['number_of_recipients'] = isset($data['number_of_recipients']) ? $data['number_of_recipients'] : null;
        $this->container['number_of_sends'] = isset($data['number_of_sends']) ? $data['number_of_sends'] : null;
        $this->container['number_of_signers'] = isset($data['number_of_signers']) ? $data['number_of_signers'] : null;
        $this->container['number_of_total_documents'] = isset($data['number_of_total_documents']) ? $data['number_of_total_documents'] : null;
        $this->container['number_of_total_pages'] = isset($data['number_of_total_pages']) ? $data['number_of_total_pages'] : null;
        $this->container['number_of_total_signers'] = isset($data['number_of_total_signers']) ? $data['number_of_total_signers'] : null;
        $this->container['number_of_unique_senders'] = isset($data['number_of_unique_senders']) ? $data['number_of_unique_senders'] : null;
        $this->container['number_total_recipients'] = isset($data['number_total_recipients']) ? $data['number_total_recipients'] : null;
        $this->container['other_recipients_list'] = isset($data['other_recipients_list']) ? $data['other_recipients_list'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['owner_mail'] = isset($data['owner_mail']) ? $data['owner_mail'] : null;
        $this->container['period_end'] = isset($data['period_end']) ? $data['period_end'] : null;
        $this->container['period_start'] = isset($data['period_start']) ? $data['period_start'] : null;
        $this->container['phone_calls_attempted'] = isset($data['phone_calls_attempted']) ? $data['phone_calls_attempted'] : null;
        $this->container['phone_calls_failed'] = isset($data['phone_calls_failed']) ? $data['phone_calls_failed'] : null;
        $this->container['pii_redacted'] = isset($data['pii_redacted']) ? $data['pii_redacted'] : null;
        $this->container['purge_date'] = isset($data['purge_date']) ? $data['purge_date'] : null;
        $this->container['reason_for_declining'] = isset($data['reason_for_declining']) ? $data['reason_for_declining'] : null;
        $this->container['reason_for_voiding'] = isset($data['reason_for_voiding']) ? $data['reason_for_voiding'] : null;
        $this->container['reassign_reason'] = isset($data['reassign_reason']) ? $data['reassign_reason'] : null;
        $this->container['received'] = isset($data['received']) ? $data['received'] : null;
        $this->container['recipient'] = isset($data['recipient']) ? $data['recipient'] : null;
        $this->container['recipient_action'] = isset($data['recipient_action']) ? $data['recipient_action'] : null;
        $this->container['recipient_company_name'] = isset($data['recipient_company_name']) ? $data['recipient_company_name'] : null;
        $this->container['recipient_country'] = isset($data['recipient_country']) ? $data['recipient_country'] : null;
        $this->container['recipient_email'] = isset($data['recipient_email']) ? $data['recipient_email'] : null;
        $this->container['recipient_id'] = isset($data['recipient_id']) ? $data['recipient_id'] : null;
        $this->container['recipient_name'] = isset($data['recipient_name']) ? $data['recipient_name'] : null;
        $this->container['recipient_role_name'] = isset($data['recipient_role_name']) ? $data['recipient_role_name'] : null;
        $this->container['recipient_template_role_name'] = isset($data['recipient_template_role_name']) ? $data['recipient_template_role_name'] : null;
        $this->container['recipient_title'] = isset($data['recipient_title']) ? $data['recipient_title'] : null;
        $this->container['recipient_type'] = isset($data['recipient_type']) ? $data['recipient_type'] : null;
        $this->container['recipient_user_id'] = isset($data['recipient_user_id']) ? $data['recipient_user_id'] : null;
        $this->container['remaining_signatures'] = isset($data['remaining_signatures']) ? $data['remaining_signatures'] : null;
        $this->container['routing_order'] = isset($data['routing_order']) ? $data['routing_order'] : null;
        $this->container['sender_account_id'] = isset($data['sender_account_id']) ? $data['sender_account_id'] : null;
        $this->container['sender_company_name'] = isset($data['sender_company_name']) ? $data['sender_company_name'] : null;
        $this->container['sender_country'] = isset($data['sender_country']) ? $data['sender_country'] : null;
        $this->container['sender_email'] = isset($data['sender_email']) ? $data['sender_email'] : null;
        $this->container['sender_ip_address'] = isset($data['sender_ip_address']) ? $data['sender_ip_address'] : null;
        $this->container['sender_job_title'] = isset($data['sender_job_title']) ? $data['sender_job_title'] : null;
        $this->container['sender_name'] = isset($data['sender_name']) ? $data['sender_name'] : null;
        $this->container['sender_user_id'] = isset($data['sender_user_id']) ? $data['sender_user_id'] : null;
        $this->container['signature_type'] = isset($data['signature_type']) ? $data['signature_type'] : null;
        $this->container['signature_type_value'] = isset($data['signature_type_value']) ? $data['signature_type_value'] : null;
        $this->container['sign_date'] = isset($data['sign_date']) ? $data['sign_date'] : null;
        $this->container['signed'] = isset($data['signed']) ? $data['signed'] : null;
        $this->container['signed_date'] = isset($data['signed_date']) ? $data['signed_date'] : null;
        $this->container['signed_on_mobile'] = isset($data['signed_on_mobile']) ? $data['signed_on_mobile'] : null;
        $this->container['signed_on_paper'] = isset($data['signed_on_paper']) ? $data['signed_on_paper'] : null;
        $this->container['signer_list'] = isset($data['signer_list']) ? $data['signer_list'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_changed_date'] = isset($data['status_changed_date']) ? $data['status_changed_date'] : null;
        $this->container['status_changed_ts'] = isset($data['status_changed_ts']) ? $data['status_changed_ts'] : null;
        $this->container['status_comment'] = isset($data['status_comment']) ? $data['status_comment'] : null;
        $this->container['subject'] = isset($data['subject']) ? $data['subject'] : null;
        $this->container['successes'] = isset($data['successes']) ? $data['successes'] : null;
        $this->container['template_id'] = isset($data['template_id']) ? $data['template_id'] : null;
        $this->container['template_name'] = isset($data['template_name']) ? $data['template_name'] : null;
        $this->container['templates_created'] = isset($data['templates_created']) ? $data['templates_created'] : null;
        $this->container['templates_created_count'] = isset($data['templates_created_count']) ? $data['templates_created_count'] : null;
        $this->container['terminal_status_date'] = isset($data['terminal_status_date']) ? $data['terminal_status_date'] : null;
        $this->container['time_to_complete_seconds'] = isset($data['time_to_complete_seconds']) ? $data['time_to_complete_seconds'] : null;
        $this->container['time_to_deliver'] = isset($data['time_to_deliver']) ? $data['time_to_deliver'] : null;
        $this->container['total_documents'] = isset($data['total_documents']) ? $data['total_documents'] : null;
        $this->container['total_envelopes'] = isset($data['total_envelopes']) ? $data['total_envelopes'] : null;
        $this->container['total_pages'] = isset($data['total_pages']) ? $data['total_pages'] : null;
        $this->container['total_recipients'] = isset($data['total_recipients']) ? $data['total_recipients'] : null;
        $this->container['total_signers'] = isset($data['total_signers']) ? $data['total_signers'] : null;
        $this->container['unique_senders'] = isset($data['unique_senders']) ? $data['unique_senders'] : null;
        $this->container['user_account_email'] = isset($data['user_account_email']) ? $data['user_account_email'] : null;
        $this->container['user_account_name'] = isset($data['user_account_name']) ? $data['user_account_name'] : null;
        $this->container['user_account_status'] = isset($data['user_account_status']) ? $data['user_account_status'] : null;
        $this->container['user_count'] = isset($data['user_count']) ? $data['user_count'] : null;
        $this->container['user_id'] = isset($data['user_id']) ? $data['user_id'] : null;
        $this->container['verification_status'] = isset($data['verification_status']) ? $data['verification_status'] : null;
        $this->container['verification_type'] = isset($data['verification_type']) ? $data['verification_type'] : null;
        $this->container['view_date'] = isset($data['view_date']) ? $data['view_date'] : null;
        $this->container['voided_ts'] = isset($data['voided_ts']) ? $data['voided_ts'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets access_code_required
     *
     * @return ?string
     */
    public function getAccessCodeRequired()
    {
        return $this->container['access_code_required'];
    }

    /**
     * Sets access_code_required
     *
     * @param ?string $access_code_required
     *
     * @return $this
     */
    public function setAccessCodeRequired($access_code_required)
    {
        $this->container['access_code_required'] = $access_code_required;

        return $this;
    }

    /**
     * Gets access_codes_attempted
     *
     * @return ?string
     */
    public function getAccessCodesAttempted()
    {
        return $this->container['access_codes_attempted'];
    }

    /**
     * Sets access_codes_attempted
     *
     * @param ?string $access_codes_attempted
     *
     * @return $this
     */
    public function setAccessCodesAttempted($access_codes_attempted)
    {
        $this->container['access_codes_attempted'] = $access_codes_attempted;

        return $this;
    }

    /**
     * Gets access_codes_failed
     *
     * @return ?string
     */
    public function getAccessCodesFailed()
    {
        return $this->container['access_codes_failed'];
    }

    /**
     * Sets access_codes_failed
     *
     * @param ?string $access_codes_failed
     *
     * @return $this
     */
    public function setAccessCodesFailed($access_codes_failed)
    {
        $this->container['access_codes_failed'] = $access_codes_failed;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return ?string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param ?string $account_id The account ID associated with the envelope.
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets authentication_category
     *
     * @return ?string
     */
    public function getAuthenticationCategory()
    {
        return $this->container['authentication_category'];
    }

    /**
     * Sets authentication_category
     *
     * @param ?string $authentication_category
     *
     * @return $this
     */
    public function setAuthenticationCategory($authentication_category)
    {
        $this->container['authentication_category'] = $authentication_category;

        return $this;
    }

    /**
     * Gets authentication_success
     *
     * @return ?string
     */
    public function getAuthenticationSuccess()
    {
        return $this->container['authentication_success'];
    }

    /**
     * Sets authentication_success
     *
     * @param ?string $authentication_success
     *
     * @return $this
     */
    public function setAuthenticationSuccess($authentication_success)
    {
        $this->container['authentication_success'] = $authentication_success;

        return $this;
    }

    /**
     * Gets authentication_type
     *
     * @return ?string
     */
    public function getAuthenticationType()
    {
        return $this->container['authentication_type'];
    }

    /**
     * Sets authentication_type
     *
     * @param ?string $authentication_type
     *
     * @return $this
     */
    public function setAuthenticationType($authentication_type)
    {
        $this->container['authentication_type'] = $authentication_type;

        return $this;
    }

    /**
     * Gets average_time_to_complete_seconds
     *
     * @return ?string
     */
    public function getAverageTimeToCompleteSeconds()
    {
        return $this->container['average_time_to_complete_seconds'];
    }

    /**
     * Sets average_time_to_complete_seconds
     *
     * @param ?string $average_time_to_complete_seconds
     *
     * @return $this
     */
    public function setAverageTimeToCompleteSeconds($average_time_to_complete_seconds)
    {
        $this->container['average_time_to_complete_seconds'] = $average_time_to_complete_seconds;

        return $this;
    }

    /**
     * Gets avg_complete_seconds
     *
     * @return ?string
     */
    public function getAvgCompleteSeconds()
    {
        return $this->container['avg_complete_seconds'];
    }

    /**
     * Sets avg_complete_seconds
     *
     * @param ?string $avg_complete_seconds
     *
     * @return $this
     */
    public function setAvgCompleteSeconds($avg_complete_seconds)
    {
        $this->container['avg_complete_seconds'] = $avg_complete_seconds;

        return $this;
    }

    /**
     * Gets capture_method
     *
     * @return ?string
     */
    public function getCaptureMethod()
    {
        return $this->container['capture_method'];
    }

    /**
     * Sets capture_method
     *
     * @param ?string $capture_method
     *
     * @return $this
     */
    public function setCaptureMethod($capture_method)
    {
        $this->container['capture_method'] = $capture_method;

        return $this;
    }

    /**
     * Gets completed
     *
     * @return ?string
     */
    public function getCompleted()
    {
        return $this->container['completed'];
    }

    /**
     * Sets completed
     *
     * @param ?string $completed
     *
     * @return $this
     */
    public function setCompleted($completed)
    {
        $this->container['completed'] = $completed;

        return $this;
    }

    /**
     * Gets completed_ts
     *
     * @return ?string
     */
    public function getCompletedTs()
    {
        return $this->container['completed_ts'];
    }

    /**
     * Sets completed_ts
     *
     * @param ?string $completed_ts
     *
     * @return $this
     */
    public function setCompletedTs($completed_ts)
    {
        $this->container['completed_ts'] = $completed_ts;

        return $this;
    }

    /**
     * Gets created_date
     *
     * @return ?string
     */
    public function getCreatedDate()
    {
        return $this->container['created_date'];
    }

    /**
     * Sets created_date
     *
     * @param ?string $created_date
     *
     * @return $this
     */
    public function setCreatedDate($created_date)
    {
        $this->container['created_date'] = $created_date;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return ?string
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param ?string $created_on
     *
     * @return $this
     */
    public function setCreatedOn($created_on)
    {
        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets creator
     *
     * @return ?string
     */
    public function getCreator()
    {
        return $this->container['creator'];
    }

    /**
     * Sets creator
     *
     * @param ?string $creator
     *
     * @return $this
     */
    public function setCreator($creator)
    {
        $this->container['creator'] = $creator;

        return $this;
    }

    /**
     * Gets custom_field
     *
     * @return ?string
     */
    public function getCustomField()
    {
        return $this->container['custom_field'];
    }

    /**
     * Sets custom_field
     *
     * @param ?string $custom_field
     *
     * @return $this
     */
    public function setCustomField($custom_field)
    {
        $this->container['custom_field'] = $custom_field;

        return $this;
    }

    /**
     * Gets declined_date
     *
     * @return ?string
     */
    public function getDeclinedDate()
    {
        return $this->container['declined_date'];
    }

    /**
     * Sets declined_date
     *
     * @param ?string $declined_date
     *
     * @return $this
     */
    public function setDeclinedDate($declined_date)
    {
        $this->container['declined_date'] = $declined_date;

        return $this;
    }

    /**
     * Gets declined_reason
     *
     * @return ?string
     */
    public function getDeclinedReason()
    {
        return $this->container['declined_reason'];
    }

    /**
     * Sets declined_reason
     *
     * @param ?string $declined_reason The reason the recipient declined the document.
     *
     * @return $this
     */
    public function setDeclinedReason($declined_reason)
    {
        $this->container['declined_reason'] = $declined_reason;

        return $this;
    }

    /**
     * Gets delivered_date
     *
     * @return ?string
     */
    public function getDeliveredDate()
    {
        return $this->container['delivered_date'];
    }

    /**
     * Sets delivered_date
     *
     * @param ?string $delivered_date
     *
     * @return $this
     */
    public function setDeliveredDate($delivered_date)
    {
        $this->container['delivered_date'] = $delivered_date;

        return $this;
    }

    /**
     * Gets envelope_count
     *
     * @return ?string
     */
    public function getEnvelopeCount()
    {
        return $this->container['envelope_count'];
    }

    /**
     * Sets envelope_count
     *
     * @param ?string $envelope_count
     *
     * @return $this
     */
    public function setEnvelopeCount($envelope_count)
    {
        $this->container['envelope_count'] = $envelope_count;

        return $this;
    }

    /**
     * Gets envelope_creator
     *
     * @return ?string
     */
    public function getEnvelopeCreator()
    {
        return $this->container['envelope_creator'];
    }

    /**
     * Sets envelope_creator
     *
     * @param ?string $envelope_creator
     *
     * @return $this
     */
    public function setEnvelopeCreator($envelope_creator)
    {
        $this->container['envelope_creator'] = $envelope_creator;

        return $this;
    }

    /**
     * Gets envelope_id
     *
     * @return ?string
     */
    public function getEnvelopeId()
    {
        return $this->container['envelope_id'];
    }

    /**
     * Sets envelope_id
     *
     * @param ?string $envelope_id The envelope ID of the envelope status that failed to post.
     *
     * @return $this
     */
    public function setEnvelopeId($envelope_id)
    {
        $this->container['envelope_id'] = $envelope_id;

        return $this;
    }

    /**
     * Gets envelope_initial_send_ts
     *
     * @return ?string
     */
    public function getEnvelopeInitialSendTs()
    {
        return $this->container['envelope_initial_send_ts'];
    }

    /**
     * Sets envelope_initial_send_ts
     *
     * @param ?string $envelope_initial_send_ts
     *
     * @return $this
     */
    public function setEnvelopeInitialSendTs($envelope_initial_send_ts)
    {
        $this->container['envelope_initial_send_ts'] = $envelope_initial_send_ts;

        return $this;
    }

    /**
     * Gets envelopes_billed
     *
     * @return ?string
     */
    public function getEnvelopesBilled()
    {
        return $this->container['envelopes_billed'];
    }

    /**
     * Sets envelopes_billed
     *
     * @param ?string $envelopes_billed
     *
     * @return $this
     */
    public function setEnvelopesBilled($envelopes_billed)
    {
        $this->container['envelopes_billed'] = $envelopes_billed;

        return $this;
    }

    /**
     * Gets envelopes_completed
     *
     * @return ?string
     */
    public function getEnvelopesCompleted()
    {
        return $this->container['envelopes_completed'];
    }

    /**
     * Sets envelopes_completed
     *
     * @param ?string $envelopes_completed
     *
     * @return $this
     */
    public function setEnvelopesCompleted($envelopes_completed)
    {
        $this->container['envelopes_completed'] = $envelopes_completed;

        return $this;
    }

    /**
     * Gets envelopes_completed_count
     *
     * @return ?string
     */
    public function getEnvelopesCompletedCount()
    {
        return $this->container['envelopes_completed_count'];
    }

    /**
     * Sets envelopes_completed_count
     *
     * @param ?string $envelopes_completed_count
     *
     * @return $this
     */
    public function setEnvelopesCompletedCount($envelopes_completed_count)
    {
        $this->container['envelopes_completed_count'] = $envelopes_completed_count;

        return $this;
    }

    /**
     * Gets envelopes_declined
     *
     * @return ?string
     */
    public function getEnvelopesDeclined()
    {
        return $this->container['envelopes_declined'];
    }

    /**
     * Sets envelopes_declined
     *
     * @param ?string $envelopes_declined
     *
     * @return $this
     */
    public function setEnvelopesDeclined($envelopes_declined)
    {
        $this->container['envelopes_declined'] = $envelopes_declined;

        return $this;
    }

    /**
     * Gets envelopes_sent
     *
     * @return ?string
     */
    public function getEnvelopesSent()
    {
        return $this->container['envelopes_sent'];
    }

    /**
     * Sets envelopes_sent
     *
     * @param ?string $envelopes_sent
     *
     * @return $this
     */
    public function setEnvelopesSent($envelopes_sent)
    {
        $this->container['envelopes_sent'] = $envelopes_sent;

        return $this;
    }

    /**
     * Gets envelopes_sent_count
     *
     * @return ?string
     */
    public function getEnvelopesSentCount()
    {
        return $this->container['envelopes_sent_count'];
    }

    /**
     * Sets envelopes_sent_count
     *
     * @param ?string $envelopes_sent_count
     *
     * @return $this
     */
    public function setEnvelopesSentCount($envelopes_sent_count)
    {
        $this->container['envelopes_sent_count'] = $envelopes_sent_count;

        return $this;
    }

    /**
     * Gets envelopes_voided
     *
     * @return ?string
     */
    public function getEnvelopesVoided()
    {
        return $this->container['envelopes_voided'];
    }

    /**
     * Sets envelopes_voided
     *
     * @param ?string $envelopes_voided
     *
     * @return $this
     */
    public function setEnvelopesVoided($envelopes_voided)
    {
        $this->container['envelopes_voided'] = $envelopes_voided;

        return $this;
    }

    /**
     * Gets envelope_voided_reason
     *
     * @return ?string
     */
    public function getEnvelopeVoidedReason()
    {
        return $this->container['envelope_voided_reason'];
    }

    /**
     * Sets envelope_voided_reason
     *
     * @param ?string $envelope_voided_reason
     *
     * @return $this
     */
    public function setEnvelopeVoidedReason($envelope_voided_reason)
    {
        $this->container['envelope_voided_reason'] = $envelope_voided_reason;

        return $this;
    }

    /**
     * Gets eod_document_description
     *
     * @return ?string
     */
    public function getEodDocumentDescription()
    {
        return $this->container['eod_document_description'];
    }

    /**
     * Sets eod_document_description
     *
     * @param ?string $eod_document_description
     *
     * @return $this
     */
    public function setEodDocumentDescription($eod_document_description)
    {
        $this->container['eod_document_description'] = $eod_document_description;

        return $this;
    }

    /**
     * Gets eod_document_name
     *
     * @return ?string
     */
    public function getEodDocumentName()
    {
        return $this->container['eod_document_name'];
    }

    /**
     * Sets eod_document_name
     *
     * @param ?string $eod_document_name
     *
     * @return $this
     */
    public function setEodDocumentName($eod_document_name)
    {
        $this->container['eod_document_name'] = $eod_document_name;

        return $this;
    }

    /**
     * Gets eod_document_profile_id
     *
     * @return ?string
     */
    public function getEodDocumentProfileId()
    {
        return $this->container['eod_document_profile_id'];
    }

    /**
     * Sets eod_document_profile_id
     *
     * @param ?string $eod_document_profile_id
     *
     * @return $this
     */
    public function setEodDocumentProfileId($eod_document_profile_id)
    {
        $this->container['eod_document_profile_id'] = $eod_document_profile_id;

        return $this;
    }

    /**
     * Gets eod_transaction_id
     *
     * @return ?string
     */
    public function getEodTransactionId()
    {
        return $this->container['eod_transaction_id'];
    }

    /**
     * Sets eod_transaction_id
     *
     * @param ?string $eod_transaction_id
     *
     * @return $this
     */
    public function setEodTransactionId($eod_transaction_id)
    {
        $this->container['eod_transaction_id'] = $eod_transaction_id;

        return $this;
    }

    /**
     * Gets eod_transaction_name
     *
     * @return ?string
     */
    public function getEodTransactionName()
    {
        return $this->container['eod_transaction_name'];
    }

    /**
     * Sets eod_transaction_name
     *
     * @param ?string $eod_transaction_name
     *
     * @return $this
     */
    public function setEodTransactionName($eod_transaction_name)
    {
        $this->container['eod_transaction_name'] = $eod_transaction_name;

        return $this;
    }

    /**
     * Gets event_date
     *
     * @return ?string
     */
    public function getEventDate()
    {
        return $this->container['event_date'];
    }

    /**
     * Sets event_date
     *
     * @param ?string $event_date
     *
     * @return $this
     */
    public function setEventDate($event_date)
    {
        $this->container['event_date'] = $event_date;

        return $this;
    }

    /**
     * Gets expiration_date
     *
     * @return ?string
     */
    public function getExpirationDate()
    {
        return $this->container['expiration_date'];
    }

    /**
     * Sets expiration_date
     *
     * @param ?string $expiration_date
     *
     * @return $this
     */
    public function setExpirationDate($expiration_date)
    {
        $this->container['expiration_date'] = $expiration_date;

        return $this;
    }

    /**
     * Gets expired_ts
     *
     * @return ?string
     */
    public function getExpiredTs()
    {
        return $this->container['expired_ts'];
    }

    /**
     * Sets expired_ts
     *
     * @param ?string $expired_ts
     *
     * @return $this
     */
    public function setExpiredTs($expired_ts)
    {
        $this->container['expired_ts'] = $expired_ts;

        return $this;
    }

    /**
     * Gets failure_reason
     *
     * @return ?string
     */
    public function getFailureReason()
    {
        return $this->container['failure_reason'];
    }

    /**
     * Sets failure_reason
     *
     * @param ?string $failure_reason
     *
     * @return $this
     */
    public function setFailureReason($failure_reason)
    {
        $this->container['failure_reason'] = $failure_reason;

        return $this;
    }

    /**
     * Gets failures
     *
     * @return ?string
     */
    public function getFailures()
    {
        return $this->container['failures'];
    }

    /**
     * Sets failures
     *
     * @param ?string $failures
     *
     * @return $this
     */
    public function setFailures($failures)
    {
        $this->container['failures'] = $failures;

        return $this;
    }

    /**
     * Gets failure_vendor_code
     *
     * @return ?string
     */
    public function getFailureVendorCode()
    {
        return $this->container['failure_vendor_code'];
    }

    /**
     * Sets failure_vendor_code
     *
     * @param ?string $failure_vendor_code
     *
     * @return $this
     */
    public function setFailureVendorCode($failure_vendor_code)
    {
        $this->container['failure_vendor_code'] = $failure_vendor_code;

        return $this;
    }

    /**
     * Gets failure_vendor_reason
     *
     * @return ?string
     */
    public function getFailureVendorReason()
    {
        return $this->container['failure_vendor_reason'];
    }

    /**
     * Sets failure_vendor_reason
     *
     * @param ?string $failure_vendor_reason
     *
     * @return $this
     */
    public function setFailureVendorReason($failure_vendor_reason)
    {
        $this->container['failure_vendor_reason'] = $failure_vendor_reason;

        return $this;
    }

    /**
     * Gets first_send_ts
     *
     * @return ?string
     */
    public function getFirstSendTs()
    {
        return $this->container['first_send_ts'];
    }

    /**
     * Sets first_send_ts
     *
     * @param ?string $first_send_ts
     *
     * @return $this
     */
    public function setFirstSendTs($first_send_ts)
    {
        $this->container['first_send_ts'] = $first_send_ts;

        return $this;
    }

    /**
     * Gets group_id
     *
     * @return ?string
     */
    public function getGroupId()
    {
        return $this->container['group_id'];
    }

    /**
     * Sets group_id
     *
     * @param ?string $group_id
     *
     * @return $this
     */
    public function setGroupId($group_id)
    {
        $this->container['group_id'] = $group_id;

        return $this;
    }

    /**
     * Gets group_name
     *
     * @return ?string
     */
    public function getGroupName()
    {
        return $this->container['group_name'];
    }

    /**
     * Sets group_name
     *
     * @param ?string $group_name The name of the group.
     *
     * @return $this
     */
    public function setGroupName($group_name)
    {
        $this->container['group_name'] = $group_name;

        return $this;
    }

    /**
     * Gets hours_to_complete_end
     *
     * @return ?string
     */
    public function getHoursToCompleteEnd()
    {
        return $this->container['hours_to_complete_end'];
    }

    /**
     * Sets hours_to_complete_end
     *
     * @param ?string $hours_to_complete_end
     *
     * @return $this
     */
    public function setHoursToCompleteEnd($hours_to_complete_end)
    {
        $this->container['hours_to_complete_end'] = $hours_to_complete_end;

        return $this;
    }

    /**
     * Gets hours_to_complete_start
     *
     * @return ?string
     */
    public function getHoursToCompleteStart()
    {
        return $this->container['hours_to_complete_start'];
    }

    /**
     * Sets hours_to_complete_start
     *
     * @param ?string $hours_to_complete_start
     *
     * @return $this
     */
    public function setHoursToCompleteStart($hours_to_complete_start)
    {
        $this->container['hours_to_complete_start'] = $hours_to_complete_start;

        return $this;
    }

    /**
     * Gets id_checks_attempted
     *
     * @return ?string
     */
    public function getIdChecksAttempted()
    {
        return $this->container['id_checks_attempted'];
    }

    /**
     * Sets id_checks_attempted
     *
     * @param ?string $id_checks_attempted
     *
     * @return $this
     */
    public function setIdChecksAttempted($id_checks_attempted)
    {
        $this->container['id_checks_attempted'] = $id_checks_attempted;

        return $this;
    }

    /**
     * Gets id_checks_failed
     *
     * @return ?string
     */
    public function getIdChecksFailed()
    {
        return $this->container['id_checks_failed'];
    }

    /**
     * Sets id_checks_failed
     *
     * @param ?string $id_checks_failed
     *
     * @return $this
     */
    public function setIdChecksFailed($id_checks_failed)
    {
        $this->container['id_checks_failed'] = $id_checks_failed;

        return $this;
    }

    /**
     * Gets id_country
     *
     * @return ?string
     */
    public function getIdCountry()
    {
        return $this->container['id_country'];
    }

    /**
     * Sets id_country
     *
     * @param ?string $id_country
     *
     * @return $this
     */
    public function setIdCountry($id_country)
    {
        $this->container['id_country'] = $id_country;

        return $this;
    }

    /**
     * Gets id_method
     *
     * @return ?string
     */
    public function getIdMethod()
    {
        return $this->container['id_method'];
    }

    /**
     * Sets id_method
     *
     * @param ?string $id_method
     *
     * @return $this
     */
    public function setIdMethod($id_method)
    {
        $this->container['id_method'] = $id_method;

        return $this;
    }

    /**
     * Gets initial_send_ts
     *
     * @return ?string
     */
    public function getInitialSendTs()
    {
        return $this->container['initial_send_ts'];
    }

    /**
     * Sets initial_send_ts
     *
     * @param ?string $initial_send_ts
     *
     * @return $this
     */
    public function setInitialSendTs($initial_send_ts)
    {
        $this->container['initial_send_ts'] = $initial_send_ts;

        return $this;
    }

    /**
     * Gets ip_address
     *
     * @return ?string
     */
    public function getIpAddress()
    {
        return $this->container['ip_address'];
    }

    /**
     * Sets ip_address
     *
     * @param ?string $ip_address
     *
     * @return $this
     */
    public function setIpAddress($ip_address)
    {
        $this->container['ip_address'] = $ip_address;

        return $this;
    }

    /**
     * Gets last_activity
     *
     * @return ?string
     */
    public function getLastActivity()
    {
        return $this->container['last_activity'];
    }

    /**
     * Sets last_activity
     *
     * @param ?string $last_activity
     *
     * @return $this
     */
    public function setLastActivity($last_activity)
    {
        $this->container['last_activity'] = $last_activity;

        return $this;
    }

    /**
     * Gets last_activity_date
     *
     * @return ?string
     */
    public function getLastActivityDate()
    {
        return $this->container['last_activity_date'];
    }

    /**
     * Sets last_activity_date
     *
     * @param ?string $last_activity_date
     *
     * @return $this
     */
    public function setLastActivityDate($last_activity_date)
    {
        $this->container['last_activity_date'] = $last_activity_date;

        return $this;
    }

    /**
     * Gets last_modified
     *
     * @return ?string
     */
    public function getLastModified()
    {
        return $this->container['last_modified'];
    }

    /**
     * Sets last_modified
     *
     * @param ?string $last_modified
     *
     * @return $this
     */
    public function setLastModified($last_modified)
    {
        $this->container['last_modified'] = $last_modified;

        return $this;
    }

    /**
     * Gets last_sent_date
     *
     * @return ?string
     */
    public function getLastSentDate()
    {
        return $this->container['last_sent_date'];
    }

    /**
     * Sets last_sent_date
     *
     * @param ?string $last_sent_date
     *
     * @return $this
     */
    public function setLastSentDate($last_sent_date)
    {
        $this->container['last_sent_date'] = $last_sent_date;

        return $this;
    }

    /**
     * Gets last_used
     *
     * @return ?string
     */
    public function getLastUsed()
    {
        return $this->container['last_used'];
    }

    /**
     * Sets last_used
     *
     * @param ?string $last_used
     *
     * @return $this
     */
    public function setLastUsed($last_used)
    {
        $this->container['last_used'] = $last_used;

        return $this;
    }

    /**
     * Gets metadata_removed
     *
     * @return ?string
     */
    public function getMetadataRemoved()
    {
        return $this->container['metadata_removed'];
    }

    /**
     * Sets metadata_removed
     *
     * @param ?string $metadata_removed
     *
     * @return $this
     */
    public function setMetadataRemoved($metadata_removed)
    {
        $this->container['metadata_removed'] = $metadata_removed;

        return $this;
    }

    /**
     * Gets not_signed
     *
     * @return ?string
     */
    public function getNotSigned()
    {
        return $this->container['not_signed'];
    }

    /**
     * Sets not_signed
     *
     * @param ?string $not_signed
     *
     * @return $this
     */
    public function setNotSigned($not_signed)
    {
        $this->container['not_signed'] = $not_signed;

        return $this;
    }

    /**
     * Gets number_of_authenticated_recipients
     *
     * @return ?string
     */
    public function getNumberOfAuthenticatedRecipients()
    {
        return $this->container['number_of_authenticated_recipients'];
    }

    /**
     * Sets number_of_authenticated_recipients
     *
     * @param ?string $number_of_authenticated_recipients
     *
     * @return $this
     */
    public function setNumberOfAuthenticatedRecipients($number_of_authenticated_recipients)
    {
        $this->container['number_of_authenticated_recipients'] = $number_of_authenticated_recipients;

        return $this;
    }

    /**
     * Gets number_of_completed_signatures
     *
     * @return ?string
     */
    public function getNumberOfCompletedSignatures()
    {
        return $this->container['number_of_completed_signatures'];
    }

    /**
     * Sets number_of_completed_signatures
     *
     * @param ?string $number_of_completed_signatures
     *
     * @return $this
     */
    public function setNumberOfCompletedSignatures($number_of_completed_signatures)
    {
        $this->container['number_of_completed_signatures'] = $number_of_completed_signatures;

        return $this;
    }

    /**
     * Gets number_of_documents
     *
     * @return ?string
     */
    public function getNumberOfDocuments()
    {
        return $this->container['number_of_documents'];
    }

    /**
     * Sets number_of_documents
     *
     * @param ?string $number_of_documents
     *
     * @return $this
     */
    public function setNumberOfDocuments($number_of_documents)
    {
        $this->container['number_of_documents'] = $number_of_documents;

        return $this;
    }

    /**
     * Gets number_of_pages
     *
     * @return ?string
     */
    public function getNumberOfPages()
    {
        return $this->container['number_of_pages'];
    }

    /**
     * Sets number_of_pages
     *
     * @param ?string $number_of_pages
     *
     * @return $this
     */
    public function setNumberOfPages($number_of_pages)
    {
        $this->container['number_of_pages'] = $number_of_pages;

        return $this;
    }

    /**
     * Gets number_of_recipients
     *
     * @return ?string
     */
    public function getNumberOfRecipients()
    {
        return $this->container['number_of_recipients'];
    }

    /**
     * Sets number_of_recipients
     *
     * @param ?string $number_of_recipients
     *
     * @return $this
     */
    public function setNumberOfRecipients($number_of_recipients)
    {
        $this->container['number_of_recipients'] = $number_of_recipients;

        return $this;
    }

    /**
     * Gets number_of_sends
     *
     * @return ?string
     */
    public function getNumberOfSends()
    {
        return $this->container['number_of_sends'];
    }

    /**
     * Sets number_of_sends
     *
     * @param ?string $number_of_sends
     *
     * @return $this
     */
    public function setNumberOfSends($number_of_sends)
    {
        $this->container['number_of_sends'] = $number_of_sends;

        return $this;
    }

    /**
     * Gets number_of_signers
     *
     * @return ?string
     */
    public function getNumberOfSigners()
    {
        return $this->container['number_of_signers'];
    }

    /**
     * Sets number_of_signers
     *
     * @param ?string $number_of_signers
     *
     * @return $this
     */
    public function setNumberOfSigners($number_of_signers)
    {
        $this->container['number_of_signers'] = $number_of_signers;

        return $this;
    }

    /**
     * Gets number_of_total_documents
     *
     * @return ?string
     */
    public function getNumberOfTotalDocuments()
    {
        return $this->container['number_of_total_documents'];
    }

    /**
     * Sets number_of_total_documents
     *
     * @param ?string $number_of_total_documents
     *
     * @return $this
     */
    public function setNumberOfTotalDocuments($number_of_total_documents)
    {
        $this->container['number_of_total_documents'] = $number_of_total_documents;

        return $this;
    }

    /**
     * Gets number_of_total_pages
     *
     * @return ?string
     */
    public function getNumberOfTotalPages()
    {
        return $this->container['number_of_total_pages'];
    }

    /**
     * Sets number_of_total_pages
     *
     * @param ?string $number_of_total_pages
     *
     * @return $this
     */
    public function setNumberOfTotalPages($number_of_total_pages)
    {
        $this->container['number_of_total_pages'] = $number_of_total_pages;

        return $this;
    }

    /**
     * Gets number_of_total_signers
     *
     * @return ?string
     */
    public function getNumberOfTotalSigners()
    {
        return $this->container['number_of_total_signers'];
    }

    /**
     * Sets number_of_total_signers
     *
     * @param ?string $number_of_total_signers
     *
     * @return $this
     */
    public function setNumberOfTotalSigners($number_of_total_signers)
    {
        $this->container['number_of_total_signers'] = $number_of_total_signers;

        return $this;
    }

    /**
     * Gets number_of_unique_senders
     *
     * @return ?string
     */
    public function getNumberOfUniqueSenders()
    {
        return $this->container['number_of_unique_senders'];
    }

    /**
     * Sets number_of_unique_senders
     *
     * @param ?string $number_of_unique_senders
     *
     * @return $this
     */
    public function setNumberOfUniqueSenders($number_of_unique_senders)
    {
        $this->container['number_of_unique_senders'] = $number_of_unique_senders;

        return $this;
    }

    /**
     * Gets number_total_recipients
     *
     * @return ?string
     */
    public function getNumberTotalRecipients()
    {
        return $this->container['number_total_recipients'];
    }

    /**
     * Sets number_total_recipients
     *
     * @param ?string $number_total_recipients
     *
     * @return $this
     */
    public function setNumberTotalRecipients($number_total_recipients)
    {
        $this->container['number_total_recipients'] = $number_total_recipients;

        return $this;
    }

    /**
     * Gets other_recipients_list
     *
     * @return ?string
     */
    public function getOtherRecipientsList()
    {
        return $this->container['other_recipients_list'];
    }

    /**
     * Sets other_recipients_list
     *
     * @param ?string $other_recipients_list
     *
     * @return $this
     */
    public function setOtherRecipientsList($other_recipients_list)
    {
        $this->container['other_recipients_list'] = $other_recipients_list;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return ?string
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param ?string $owner
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets owner_mail
     *
     * @return ?string
     */
    public function getOwnerMail()
    {
        return $this->container['owner_mail'];
    }

    /**
     * Sets owner_mail
     *
     * @param ?string $owner_mail
     *
     * @return $this
     */
    public function setOwnerMail($owner_mail)
    {
        $this->container['owner_mail'] = $owner_mail;

        return $this;
    }

    /**
     * Gets period_end
     *
     * @return ?string
     */
    public function getPeriodEnd()
    {
        return $this->container['period_end'];
    }

    /**
     * Sets period_end
     *
     * @param ?string $period_end
     *
     * @return $this
     */
    public function setPeriodEnd($period_end)
    {
        $this->container['period_end'] = $period_end;

        return $this;
    }

    /**
     * Gets period_start
     *
     * @return ?string
     */
    public function getPeriodStart()
    {
        return $this->container['period_start'];
    }

    /**
     * Sets period_start
     *
     * @param ?string $period_start
     *
     * @return $this
     */
    public function setPeriodStart($period_start)
    {
        $this->container['period_start'] = $period_start;

        return $this;
    }

    /**
     * Gets phone_calls_attempted
     *
     * @return ?string
     */
    public function getPhoneCallsAttempted()
    {
        return $this->container['phone_calls_attempted'];
    }

    /**
     * Sets phone_calls_attempted
     *
     * @param ?string $phone_calls_attempted
     *
     * @return $this
     */
    public function setPhoneCallsAttempted($phone_calls_attempted)
    {
        $this->container['phone_calls_attempted'] = $phone_calls_attempted;

        return $this;
    }

    /**
     * Gets phone_calls_failed
     *
     * @return ?string
     */
    public function getPhoneCallsFailed()
    {
        return $this->container['phone_calls_failed'];
    }

    /**
     * Sets phone_calls_failed
     *
     * @param ?string $phone_calls_failed
     *
     * @return $this
     */
    public function setPhoneCallsFailed($phone_calls_failed)
    {
        $this->container['phone_calls_failed'] = $phone_calls_failed;

        return $this;
    }

    /**
     * Gets pii_redacted
     *
     * @return ?string
     */
    public function getPiiRedacted()
    {
        return $this->container['pii_redacted'];
    }

    /**
     * Sets pii_redacted
     *
     * @param ?string $pii_redacted
     *
     * @return $this
     */
    public function setPiiRedacted($pii_redacted)
    {
        $this->container['pii_redacted'] = $pii_redacted;

        return $this;
    }

    /**
     * Gets purge_date
     *
     * @return ?string
     */
    public function getPurgeDate()
    {
        return $this->container['purge_date'];
    }

    /**
     * Sets purge_date
     *
     * @param ?string $purge_date
     *
     * @return $this
     */
    public function setPurgeDate($purge_date)
    {
        $this->container['purge_date'] = $purge_date;

        return $this;
    }

    /**
     * Gets reason_for_declining
     *
     * @return ?string
     */
    public function getReasonForDeclining()
    {
        return $this->container['reason_for_declining'];
    }

    /**
     * Sets reason_for_declining
     *
     * @param ?string $reason_for_declining
     *
     * @return $this
     */
    public function setReasonForDeclining($reason_for_declining)
    {
        $this->container['reason_for_declining'] = $reason_for_declining;

        return $this;
    }

    /**
     * Gets reason_for_voiding
     *
     * @return ?string
     */
    public function getReasonForVoiding()
    {
        return $this->container['reason_for_voiding'];
    }

    /**
     * Sets reason_for_voiding
     *
     * @param ?string $reason_for_voiding
     *
     * @return $this
     */
    public function setReasonForVoiding($reason_for_voiding)
    {
        $this->container['reason_for_voiding'] = $reason_for_voiding;

        return $this;
    }

    /**
     * Gets reassign_reason
     *
     * @return ?string
     */
    public function getReassignReason()
    {
        return $this->container['reassign_reason'];
    }

    /**
     * Sets reassign_reason
     *
     * @param ?string $reassign_reason
     *
     * @return $this
     */
    public function setReassignReason($reassign_reason)
    {
        $this->container['reassign_reason'] = $reassign_reason;

        return $this;
    }

    /**
     * Gets received
     *
     * @return ?string
     */
    public function getReceived()
    {
        return $this->container['received'];
    }

    /**
     * Sets received
     *
     * @param ?string $received
     *
     * @return $this
     */
    public function setReceived($received)
    {
        $this->container['received'] = $received;

        return $this;
    }

    /**
     * Gets recipient
     *
     * @return ?string
     */
    public function getRecipient()
    {
        return $this->container['recipient'];
    }

    /**
     * Sets recipient
     *
     * @param ?string $recipient
     *
     * @return $this
     */
    public function setRecipient($recipient)
    {
        $this->container['recipient'] = $recipient;

        return $this;
    }

    /**
     * Gets recipient_action
     *
     * @return ?string
     */
    public function getRecipientAction()
    {
        return $this->container['recipient_action'];
    }

    /**
     * Sets recipient_action
     *
     * @param ?string $recipient_action
     *
     * @return $this
     */
    public function setRecipientAction($recipient_action)
    {
        $this->container['recipient_action'] = $recipient_action;

        return $this;
    }

    /**
     * Gets recipient_company_name
     *
     * @return ?string
     */
    public function getRecipientCompanyName()
    {
        return $this->container['recipient_company_name'];
    }

    /**
     * Sets recipient_company_name
     *
     * @param ?string $recipient_company_name
     *
     * @return $this
     */
    public function setRecipientCompanyName($recipient_company_name)
    {
        $this->container['recipient_company_name'] = $recipient_company_name;

        return $this;
    }

    /**
     * Gets recipient_country
     *
     * @return ?string
     */
    public function getRecipientCountry()
    {
        return $this->container['recipient_country'];
    }

    /**
     * Sets recipient_country
     *
     * @param ?string $recipient_country
     *
     * @return $this
     */
    public function setRecipientCountry($recipient_country)
    {
        $this->container['recipient_country'] = $recipient_country;

        return $this;
    }

    /**
     * Gets recipient_email
     *
     * @return ?string
     */
    public function getRecipientEmail()
    {
        return $this->container['recipient_email'];
    }

    /**
     * Sets recipient_email
     *
     * @param ?string $recipient_email
     *
     * @return $this
     */
    public function setRecipientEmail($recipient_email)
    {
        $this->container['recipient_email'] = $recipient_email;

        return $this;
    }

    /**
     * Gets recipient_id
     *
     * @return ?string
     */
    public function getRecipientId()
    {
        return $this->container['recipient_id'];
    }

    /**
     * Sets recipient_id
     *
     * @param ?string $recipient_id Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
     *
     * @return $this
     */
    public function setRecipientId($recipient_id)
    {
        $this->container['recipient_id'] = $recipient_id;

        return $this;
    }

    /**
     * Gets recipient_name
     *
     * @return ?string
     */
    public function getRecipientName()
    {
        return $this->container['recipient_name'];
    }

    /**
     * Sets recipient_name
     *
     * @param ?string $recipient_name
     *
     * @return $this
     */
    public function setRecipientName($recipient_name)
    {
        $this->container['recipient_name'] = $recipient_name;

        return $this;
    }

    /**
     * Gets recipient_role_name
     *
     * @return ?string
     */
    public function getRecipientRoleName()
    {
        return $this->container['recipient_role_name'];
    }

    /**
     * Sets recipient_role_name
     *
     * @param ?string $recipient_role_name
     *
     * @return $this
     */
    public function setRecipientRoleName($recipient_role_name)
    {
        $this->container['recipient_role_name'] = $recipient_role_name;

        return $this;
    }

    /**
     * Gets recipient_template_role_name
     *
     * @return ?string
     */
    public function getRecipientTemplateRoleName()
    {
        return $this->container['recipient_template_role_name'];
    }

    /**
     * Sets recipient_template_role_name
     *
     * @param ?string $recipient_template_role_name
     *
     * @return $this
     */
    public function setRecipientTemplateRoleName($recipient_template_role_name)
    {
        $this->container['recipient_template_role_name'] = $recipient_template_role_name;

        return $this;
    }

    /**
     * Gets recipient_title
     *
     * @return ?string
     */
    public function getRecipientTitle()
    {
        return $this->container['recipient_title'];
    }

    /**
     * Sets recipient_title
     *
     * @param ?string $recipient_title
     *
     * @return $this
     */
    public function setRecipientTitle($recipient_title)
    {
        $this->container['recipient_title'] = $recipient_title;

        return $this;
    }

    /**
     * Gets recipient_type
     *
     * @return ?string
     */
    public function getRecipientType()
    {
        return $this->container['recipient_type'];
    }

    /**
     * Sets recipient_type
     *
     * @param ?string $recipient_type
     *
     * @return $this
     */
    public function setRecipientType($recipient_type)
    {
        $this->container['recipient_type'] = $recipient_type;

        return $this;
    }

    /**
     * Gets recipient_user_id
     *
     * @return ?string
     */
    public function getRecipientUserId()
    {
        return $this->container['recipient_user_id'];
    }

    /**
     * Sets recipient_user_id
     *
     * @param ?string $recipient_user_id
     *
     * @return $this
     */
    public function setRecipientUserId($recipient_user_id)
    {
        $this->container['recipient_user_id'] = $recipient_user_id;

        return $this;
    }

    /**
     * Gets remaining_signatures
     *
     * @return ?string
     */
    public function getRemainingSignatures()
    {
        return $this->container['remaining_signatures'];
    }

    /**
     * Sets remaining_signatures
     *
     * @param ?string $remaining_signatures
     *
     * @return $this
     */
    public function setRemainingSignatures($remaining_signatures)
    {
        $this->container['remaining_signatures'] = $remaining_signatures;

        return $this;
    }

    /**
     * Gets routing_order
     *
     * @return ?string
     */
    public function getRoutingOrder()
    {
        return $this->container['routing_order'];
    }

    /**
     * Sets routing_order
     *
     * @param ?string $routing_order Specifies the routing order of the recipient in the envelope.
     *
     * @return $this
     */
    public function setRoutingOrder($routing_order)
    {
        $this->container['routing_order'] = $routing_order;

        return $this;
    }

    /**
     * Gets sender_account_id
     *
     * @return ?string
     */
    public function getSenderAccountId()
    {
        return $this->container['sender_account_id'];
    }

    /**
     * Sets sender_account_id
     *
     * @param ?string $sender_account_id
     *
     * @return $this
     */
    public function setSenderAccountId($sender_account_id)
    {
        $this->container['sender_account_id'] = $sender_account_id;

        return $this;
    }

    /**
     * Gets sender_company_name
     *
     * @return ?string
     */
    public function getSenderCompanyName()
    {
        return $this->container['sender_company_name'];
    }

    /**
     * Sets sender_company_name
     *
     * @param ?string $sender_company_name
     *
     * @return $this
     */
    public function setSenderCompanyName($sender_company_name)
    {
        $this->container['sender_company_name'] = $sender_company_name;

        return $this;
    }

    /**
     * Gets sender_country
     *
     * @return ?string
     */
    public function getSenderCountry()
    {
        return $this->container['sender_country'];
    }

    /**
     * Sets sender_country
     *
     * @param ?string $sender_country
     *
     * @return $this
     */
    public function setSenderCountry($sender_country)
    {
        $this->container['sender_country'] = $sender_country;

        return $this;
    }

    /**
     * Gets sender_email
     *
     * @return ?string
     */
    public function getSenderEmail()
    {
        return $this->container['sender_email'];
    }

    /**
     * Sets sender_email
     *
     * @param ?string $sender_email
     *
     * @return $this
     */
    public function setSenderEmail($sender_email)
    {
        $this->container['sender_email'] = $sender_email;

        return $this;
    }

    /**
     * Gets sender_ip_address
     *
     * @return ?string
     */
    public function getSenderIpAddress()
    {
        return $this->container['sender_ip_address'];
    }

    /**
     * Sets sender_ip_address
     *
     * @param ?string $sender_ip_address
     *
     * @return $this
     */
    public function setSenderIpAddress($sender_ip_address)
    {
        $this->container['sender_ip_address'] = $sender_ip_address;

        return $this;
    }

    /**
     * Gets sender_job_title
     *
     * @return ?string
     */
    public function getSenderJobTitle()
    {
        return $this->container['sender_job_title'];
    }

    /**
     * Sets sender_job_title
     *
     * @param ?string $sender_job_title
     *
     * @return $this
     */
    public function setSenderJobTitle($sender_job_title)
    {
        $this->container['sender_job_title'] = $sender_job_title;

        return $this;
    }

    /**
     * Gets sender_name
     *
     * @return ?string
     */
    public function getSenderName()
    {
        return $this->container['sender_name'];
    }

    /**
     * Sets sender_name
     *
     * @param ?string $sender_name
     *
     * @return $this
     */
    public function setSenderName($sender_name)
    {
        $this->container['sender_name'] = $sender_name;

        return $this;
    }

    /**
     * Gets sender_user_id
     *
     * @return ?string
     */
    public function getSenderUserId()
    {
        return $this->container['sender_user_id'];
    }

    /**
     * Sets sender_user_id
     *
     * @param ?string $sender_user_id
     *
     * @return $this
     */
    public function setSenderUserId($sender_user_id)
    {
        $this->container['sender_user_id'] = $sender_user_id;

        return $this;
    }

    /**
     * Gets signature_type
     *
     * @return ?string
     */
    public function getSignatureType()
    {
        return $this->container['signature_type'];
    }

    /**
     * Sets signature_type
     *
     * @param ?string $signature_type
     *
     * @return $this
     */
    public function setSignatureType($signature_type)
    {
        $this->container['signature_type'] = $signature_type;

        return $this;
    }

    /**
     * Gets signature_type_value
     *
     * @return ?string
     */
    public function getSignatureTypeValue()
    {
        return $this->container['signature_type_value'];
    }

    /**
     * Sets signature_type_value
     *
     * @param ?string $signature_type_value
     *
     * @return $this
     */
    public function setSignatureTypeValue($signature_type_value)
    {
        $this->container['signature_type_value'] = $signature_type_value;

        return $this;
    }

    /**
     * Gets sign_date
     *
     * @return ?string
     */
    public function getSignDate()
    {
        return $this->container['sign_date'];
    }

    /**
     * Sets sign_date
     *
     * @param ?string $sign_date
     *
     * @return $this
     */
    public function setSignDate($sign_date)
    {
        $this->container['sign_date'] = $sign_date;

        return $this;
    }

    /**
     * Gets signed
     *
     * @return ?string
     */
    public function getSigned()
    {
        return $this->container['signed'];
    }

    /**
     * Sets signed
     *
     * @param ?string $signed
     *
     * @return $this
     */
    public function setSigned($signed)
    {
        $this->container['signed'] = $signed;

        return $this;
    }

    /**
     * Gets signed_date
     *
     * @return ?string
     */
    public function getSignedDate()
    {
        return $this->container['signed_date'];
    }

    /**
     * Sets signed_date
     *
     * @param ?string $signed_date
     *
     * @return $this
     */
    public function setSignedDate($signed_date)
    {
        $this->container['signed_date'] = $signed_date;

        return $this;
    }

    /**
     * Gets signed_on_mobile
     *
     * @return ?string
     */
    public function getSignedOnMobile()
    {
        return $this->container['signed_on_mobile'];
    }

    /**
     * Sets signed_on_mobile
     *
     * @param ?string $signed_on_mobile
     *
     * @return $this
     */
    public function setSignedOnMobile($signed_on_mobile)
    {
        $this->container['signed_on_mobile'] = $signed_on_mobile;

        return $this;
    }

    /**
     * Gets signed_on_paper
     *
     * @return ?string
     */
    public function getSignedOnPaper()
    {
        return $this->container['signed_on_paper'];
    }

    /**
     * Sets signed_on_paper
     *
     * @param ?string $signed_on_paper
     *
     * @return $this
     */
    public function setSignedOnPaper($signed_on_paper)
    {
        $this->container['signed_on_paper'] = $signed_on_paper;

        return $this;
    }

    /**
     * Gets signer_list
     *
     * @return ?string
     */
    public function getSignerList()
    {
        return $this->container['signer_list'];
    }

    /**
     * Sets signer_list
     *
     * @param ?string $signer_list
     *
     * @return $this
     */
    public function setSignerList($signer_list)
    {
        $this->container['signer_list'] = $signer_list;

        return $this;
    }

    /**
     * Gets status
     *
     * @return ?string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param ?string $status Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_changed_date
     *
     * @return ?string
     */
    public function getStatusChangedDate()
    {
        return $this->container['status_changed_date'];
    }

    /**
     * Sets status_changed_date
     *
     * @param ?string $status_changed_date
     *
     * @return $this
     */
    public function setStatusChangedDate($status_changed_date)
    {
        $this->container['status_changed_date'] = $status_changed_date;

        return $this;
    }

    /**
     * Gets status_changed_ts
     *
     * @return ?string
     */
    public function getStatusChangedTs()
    {
        return $this->container['status_changed_ts'];
    }

    /**
     * Sets status_changed_ts
     *
     * @param ?string $status_changed_ts
     *
     * @return $this
     */
    public function setStatusChangedTs($status_changed_ts)
    {
        $this->container['status_changed_ts'] = $status_changed_ts;

        return $this;
    }

    /**
     * Gets status_comment
     *
     * @return ?string
     */
    public function getStatusComment()
    {
        return $this->container['status_comment'];
    }

    /**
     * Sets status_comment
     *
     * @param ?string $status_comment
     *
     * @return $this
     */
    public function setStatusComment($status_comment)
    {
        $this->container['status_comment'] = $status_comment;

        return $this;
    }

    /**
     * Gets subject
     *
     * @return ?string
     */
    public function getSubject()
    {
        return $this->container['subject'];
    }

    /**
     * Sets subject
     *
     * @param ?string $subject
     *
     * @return $this
     */
    public function setSubject($subject)
    {
        $this->container['subject'] = $subject;

        return $this;
    }

    /**
     * Gets successes
     *
     * @return ?string
     */
    public function getSuccesses()
    {
        return $this->container['successes'];
    }

    /**
     * Sets successes
     *
     * @param ?string $successes
     *
     * @return $this
     */
    public function setSuccesses($successes)
    {
        $this->container['successes'] = $successes;

        return $this;
    }

    /**
     * Gets template_id
     *
     * @return ?string
     */
    public function getTemplateId()
    {
        return $this->container['template_id'];
    }

    /**
     * Sets template_id
     *
     * @param ?string $template_id The unique identifier of the template. If this is not provided, DocuSign will generate a value.
     *
     * @return $this
     */
    public function setTemplateId($template_id)
    {
        $this->container['template_id'] = $template_id;

        return $this;
    }

    /**
     * Gets template_name
     *
     * @return ?string
     */
    public function getTemplateName()
    {
        return $this->container['template_name'];
    }

    /**
     * Sets template_name
     *
     * @param ?string $template_name
     *
     * @return $this
     */
    public function setTemplateName($template_name)
    {
        $this->container['template_name'] = $template_name;

        return $this;
    }

    /**
     * Gets templates_created
     *
     * @return ?string
     */
    public function getTemplatesCreated()
    {
        return $this->container['templates_created'];
    }

    /**
     * Sets templates_created
     *
     * @param ?string $templates_created
     *
     * @return $this
     */
    public function setTemplatesCreated($templates_created)
    {
        $this->container['templates_created'] = $templates_created;

        return $this;
    }

    /**
     * Gets templates_created_count
     *
     * @return ?string
     */
    public function getTemplatesCreatedCount()
    {
        return $this->container['templates_created_count'];
    }

    /**
     * Sets templates_created_count
     *
     * @param ?string $templates_created_count
     *
     * @return $this
     */
    public function setTemplatesCreatedCount($templates_created_count)
    {
        $this->container['templates_created_count'] = $templates_created_count;

        return $this;
    }

    /**
     * Gets terminal_status_date
     *
     * @return ?string
     */
    public function getTerminalStatusDate()
    {
        return $this->container['terminal_status_date'];
    }

    /**
     * Sets terminal_status_date
     *
     * @param ?string $terminal_status_date
     *
     * @return $this
     */
    public function setTerminalStatusDate($terminal_status_date)
    {
        $this->container['terminal_status_date'] = $terminal_status_date;

        return $this;
    }

    /**
     * Gets time_to_complete_seconds
     *
     * @return ?string
     */
    public function getTimeToCompleteSeconds()
    {
        return $this->container['time_to_complete_seconds'];
    }

    /**
     * Sets time_to_complete_seconds
     *
     * @param ?string $time_to_complete_seconds
     *
     * @return $this
     */
    public function setTimeToCompleteSeconds($time_to_complete_seconds)
    {
        $this->container['time_to_complete_seconds'] = $time_to_complete_seconds;

        return $this;
    }

    /**
     * Gets time_to_deliver
     *
     * @return ?string
     */
    public function getTimeToDeliver()
    {
        return $this->container['time_to_deliver'];
    }

    /**
     * Sets time_to_deliver
     *
     * @param ?string $time_to_deliver
     *
     * @return $this
     */
    public function setTimeToDeliver($time_to_deliver)
    {
        $this->container['time_to_deliver'] = $time_to_deliver;

        return $this;
    }

    /**
     * Gets total_documents
     *
     * @return ?string
     */
    public function getTotalDocuments()
    {
        return $this->container['total_documents'];
    }

    /**
     * Sets total_documents
     *
     * @param ?string $total_documents
     *
     * @return $this
     */
    public function setTotalDocuments($total_documents)
    {
        $this->container['total_documents'] = $total_documents;

        return $this;
    }

    /**
     * Gets total_envelopes
     *
     * @return ?string
     */
    public function getTotalEnvelopes()
    {
        return $this->container['total_envelopes'];
    }

    /**
     * Sets total_envelopes
     *
     * @param ?string $total_envelopes
     *
     * @return $this
     */
    public function setTotalEnvelopes($total_envelopes)
    {
        $this->container['total_envelopes'] = $total_envelopes;

        return $this;
    }

    /**
     * Gets total_pages
     *
     * @return ?string
     */
    public function getTotalPages()
    {
        return $this->container['total_pages'];
    }

    /**
     * Sets total_pages
     *
     * @param ?string $total_pages
     *
     * @return $this
     */
    public function setTotalPages($total_pages)
    {
        $this->container['total_pages'] = $total_pages;

        return $this;
    }

    /**
     * Gets total_recipients
     *
     * @return ?string
     */
    public function getTotalRecipients()
    {
        return $this->container['total_recipients'];
    }

    /**
     * Sets total_recipients
     *
     * @param ?string $total_recipients
     *
     * @return $this
     */
    public function setTotalRecipients($total_recipients)
    {
        $this->container['total_recipients'] = $total_recipients;

        return $this;
    }

    /**
     * Gets total_signers
     *
     * @return ?string
     */
    public function getTotalSigners()
    {
        return $this->container['total_signers'];
    }

    /**
     * Sets total_signers
     *
     * @param ?string $total_signers
     *
     * @return $this
     */
    public function setTotalSigners($total_signers)
    {
        $this->container['total_signers'] = $total_signers;

        return $this;
    }

    /**
     * Gets unique_senders
     *
     * @return ?string
     */
    public function getUniqueSenders()
    {
        return $this->container['unique_senders'];
    }

    /**
     * Sets unique_senders
     *
     * @param ?string $unique_senders
     *
     * @return $this
     */
    public function setUniqueSenders($unique_senders)
    {
        $this->container['unique_senders'] = $unique_senders;

        return $this;
    }

    /**
     * Gets user_account_email
     *
     * @return ?string
     */
    public function getUserAccountEmail()
    {
        return $this->container['user_account_email'];
    }

    /**
     * Sets user_account_email
     *
     * @param ?string $user_account_email
     *
     * @return $this
     */
    public function setUserAccountEmail($user_account_email)
    {
        $this->container['user_account_email'] = $user_account_email;

        return $this;
    }

    /**
     * Gets user_account_name
     *
     * @return ?string
     */
    public function getUserAccountName()
    {
        return $this->container['user_account_name'];
    }

    /**
     * Sets user_account_name
     *
     * @param ?string $user_account_name
     *
     * @return $this
     */
    public function setUserAccountName($user_account_name)
    {
        $this->container['user_account_name'] = $user_account_name;

        return $this;
    }

    /**
     * Gets user_account_status
     *
     * @return ?string
     */
    public function getUserAccountStatus()
    {
        return $this->container['user_account_status'];
    }

    /**
     * Sets user_account_status
     *
     * @param ?string $user_account_status
     *
     * @return $this
     */
    public function setUserAccountStatus($user_account_status)
    {
        $this->container['user_account_status'] = $user_account_status;

        return $this;
    }

    /**
     * Gets user_count
     *
     * @return ?string
     */
    public function getUserCount()
    {
        return $this->container['user_count'];
    }

    /**
     * Sets user_count
     *
     * @param ?string $user_count
     *
     * @return $this
     */
    public function setUserCount($user_count)
    {
        $this->container['user_count'] = $user_count;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return ?string
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param ?string $user_id
     *
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets verification_status
     *
     * @return ?string
     */
    public function getVerificationStatus()
    {
        return $this->container['verification_status'];
    }

    /**
     * Sets verification_status
     *
     * @param ?string $verification_status
     *
     * @return $this
     */
    public function setVerificationStatus($verification_status)
    {
        $this->container['verification_status'] = $verification_status;

        return $this;
    }

    /**
     * Gets verification_type
     *
     * @return ?string
     */
    public function getVerificationType()
    {
        return $this->container['verification_type'];
    }

    /**
     * Sets verification_type
     *
     * @param ?string $verification_type
     *
     * @return $this
     */
    public function setVerificationType($verification_type)
    {
        $this->container['verification_type'] = $verification_type;

        return $this;
    }

    /**
     * Gets view_date
     *
     * @return ?string
     */
    public function getViewDate()
    {
        return $this->container['view_date'];
    }

    /**
     * Sets view_date
     *
     * @param ?string $view_date
     *
     * @return $this
     */
    public function setViewDate($view_date)
    {
        $this->container['view_date'] = $view_date;

        return $this;
    }

    /**
     * Gets voided_ts
     *
     * @return ?string
     */
    public function getVoidedTs()
    {
        return $this->container['voided_ts'];
    }

    /**
     * Sets voided_ts
     *
     * @param ?string $voided_ts
     *
     * @return $this
     */
    public function setVoidedTs($voided_ts)
    {
        $this->container['voided_ts'] = $voided_ts;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

